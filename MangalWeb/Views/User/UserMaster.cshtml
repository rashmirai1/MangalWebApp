@model MangalWeb.Model.Utilities.UserViewModel

@{
    ViewBag.Title = "ShowUserMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap.min.css" />

@using (Ajax.BeginForm("CreateEdit", "User", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID, new { @id = "ItemID" })
    @Html.HiddenFor(model => model.EditId, new { @id = "EditId" })

    <header id="topbar" class="affix">
        <div class="col-md-5 col-sm-4 col-xs-12">
            <div class="topbar-left">
                <h4>User Master</h4>
            </div><!--end of topbar-left-->
        </div><!--end of col-md-5-->
        <div class="col-md-7 col-sm-8 col-xs-12">
            <div class="topbar-right" id="headerbutton">
                <button href="#editModal" id="btn_edit" onclick="return ShowEditTableList();" type="button" class="@TempData["btn_editclass"]" data-toggle="modal"><span class="fa fa-pencil pr5"></span> <span class="hidden-xs">Edit</span></button>
                <button type="submit" id="btn_save" class="@TempData["btn_saveclass"]"><span class="fa fa-save pr5"></span> <span class="hidden-xs">Save</span></button>
                <button type="button" id="btnDelete" class="@TempData["btn_deleteclass"]"><span class="fa fa-trash pr5"></span> <span class="hidden-xs">Delete</span></button>
                <button href="#viewModal" id="btn_view" onclick="return ShowViewTableList();" class="@TempData["btn_viewclass"]"
                        type="button" data-toggle="modal">
                    <span class="fa fa-eye pr5"></span> <span class="hidden-xs">View</span>
                </button>
                <a href="@Html.Raw(@Url.Action("UserMaster", "User"))" type="button" data-toggle="modal" class="btn btn-alert btn-md light fw600 ml10"><span class="fa fa-close pr5"></span><span class="hidden-xs">Cancel</span></a>
            </div><!--end of topbar-right-->

        </div><!--end of col-md-7-->
    </header>

    <section id="content" class="animated fadeIn">
        <!-- Start: Topbar -->
        <!-- End: Topbar -->
        <!-- Begin: Content -->
        <!-- Dashboard Tiles -->
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel1 panel-primary">
                    <div class="admin-form">
                        <div class="panel-body">
                            <div class="section row mbn">
                                <div class="form-horizontal">
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Reference ID<span class="text-danger">  </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                <span class="text-danger" id="CustomErr"> </span>
                                                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Reference ID", @readonly = "readonly" } })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Employee Name<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                        @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Employee Name", @maxlength = "50" } })
                                                        <span class="text-danger small">@Html.ValidationMessageFor(m => m.EmployeeName)</span>
                                                        <i class="arrow"></i>
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Employee Code<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                        @Html.EditorFor(model => model.EmployeeCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Employee Code", @maxlength = "20" } })
                                                        <span class="text-danger small">@Html.ValidationMessageFor(m => m.EmployeeCode)</span>
                                                        <i class="arrow"></i>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Address<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                        @Html.TextAreaFor(model => model.Address, new { @class = "form-control",@rows="3",@cols="2", @placeholder = "Address", @maxlength = "100" })
                                                        <span class="text-danger small">@Html.ValidationMessageFor(m => m.Address)</span>
                                                        <i class="arrow"></i>
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Mobile No<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mobile No",@maxlength="10", @onkeypress = "return event.charCode >= 48 && event.charCode <= 57" } })
                                                        <span class="text-danger small">@Html.ValidationMessageFor(m => m.MobileNo)</span>
                                                        <i class="arrow"></i>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Email Id<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email Id",@type="Email", @maxlength = "30" } })
                                                        <span class="text-danger small">@Html.ValidationMessageFor(m => m.EmailId)</span>
                                                        <i class="arrow"></i>
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">User Category<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                <div class="section">
                                                    <label class="field select">
                                                        @Html.DropDownListFor(m => m.UserCategoryId, (SelectList)ViewBag.UserCategoryList, "-- Select User Category --", htmlAttributes: new { @class = "form-control" })
                                                        <span class="text-danger small">@Html.ValidationMessageFor(m => m.UserCategoryId)</span>
                                                        <i class="arrow"></i>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">User Name<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "User Name", @maxlength = "30" } })
                                                        <span class="text-danger small">@Html.ValidationMessageFor(m => m.UserName)</span>
                                                        <i class="arrow"></i>
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Password<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @placeholder = "Password", @type="Password", @maxlength = "30" })
                                                        <span class="text-danger small">@Html.ValidationMessageFor(m => m.Password)</span>
                                                        <i class="arrow"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <small style="float:right"><span class="text-danger">* </span>indicates compulsary fields</small>
    </section>
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@section javascriptsection{
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            // if (document.URL.indexOf("ID") == -1) {
            $("#EmployeeCode").on('input', function () {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("doesEmployeeCodeExist", "User")',
                    data: '{EmployeeCode: "' + $("#EmployeeCode").val() + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result == "") {
                            $("#CustomErr").empty();
                            $("#btn_save").removeAttr('disabled')
                        }
                        else {
                            $("#CustomErr").text(result);
                            $("#btn_save").attr('disabled', true)
                            return false;
                        }
                    },
                    error: function (xhr, status, error) {
                        //alert(error);
                    }
                });
            });
        });

        function ShowEditTableList() {
            $('#divviewfilldata').empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetUserMasterTable", "User")',
                dataType: "html",
                data: { Operation: "Edit" },
                success: function (data) {
                    $('#diveditfilldata').empty();
                    $('#diveditfilldata').html(data);
                    $('#example').dataTable();
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        function ShowViewTableList() {
            $('#diveditfilldata').empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetUserMasterTable", "User")',
                dataType: "html",
                data: { Operation: "View" },
                success: function (data) {
                    $('#divviewfilldata').empty();
                    $('#divviewfilldata').html(data);
                    $('#example').dataTable();
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
        var urlRedirect = '@Html.Raw(@Url.Action("UserMaster", "User"))';
        function OnSuccess(response) {

            $("#saveModal").modal('show');
            $(document).click(function () {
                window.location.href = urlRedirect;
            });
        }

        function OnFailure(response) {
            alert("Error occured.");
        }

        $(function () {
            var url = '@Html.Raw(@Url.Action("Delete", "User"))';
            $("#btnDelete").click(function () {
                $("#deleteModal").modal('show');
            });
            $("#btnDeleteConfirm").click(function () {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: '{id: "' + $("#ItemID").val() + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data != "") {
                            $("#CustomErr").text(data);
                            return false;
                        }
                        else {
                            $("#CustomErr").empty();
                            $("#DeleteSuccessModal").modal('show');

                            $(document).click(function () {
                                window.location.href = urlRedirect;
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            });
        });
    </script>
}

