@model MangalWeb.Model.Transaction.DocumentUploadViewModel
@{
    ViewBag.Title = "DocumentUpload";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/dataTablescss")

@using (Ajax.BeginForm("", "", new AjaxOptions { OnSuccess = "OnSuccess" }, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID, new { @id = "ItemID" })
    @Html.HiddenFor(x => x.TransactionId)
    @Html.HiddenFor(x => x.KycId)
    @Html.HiddenFor(x=>x.operation)
    <header id="topbar" class="affix">
        <div class="col-md-5 col-sm-4 col-xs-12">
            <div class="topbar-left">
                <h4>Documents Uploading Form</h4>
            </div><!--end of topbar-left-->
        </div><!--end of col-md-5-->
        <div class="col-md-7 col-sm-8 col-xs-12">
            <div class="topbar-right" id="headerbutton" @TempData["headerbutton"]>
                <button href="#editSanctionModal" id="btn_edit" onclick="return ShowEditTableList();" type="button" class="@TempData["btn_editclass"]" data-toggle="modal"><span class="fa fa-pencil pr5"></span> <span class="hidden-xs">Edit</span></button>
                <button type="submit" id="btn_save" class="@TempData["btn_saveclass"]"><span class="fa fa-save pr5"></span> <span class="hidden-xs">Save</span></button>
                <button type="button" id="btnDelete" class="@TempData["btn_deleteclass"]"><span class="fa fa-trash pr5"></span> <span class="hidden-xs">Delete</span></button>
                <button href="#editSanctionModal" id="btn_view" onclick="return ShowViewTableList();" class="@TempData["btn_viewclass"]" type="button" data-toggle="modal">
                    <span class="fa fa-eye pr5"></span> <span class="hidden-xs">View</span>
                </button>
                <a href="@Html.Raw(@Url.Action("DocumentUpload", "DocumentUpload"))" type="button" data-toggle="modal" class="btn btn-alert btn-md light fw600 ml10" title="Cancel" alt="Cancel"><span class="fa fa-close pr5"></span><span class="hidden-xs">Cancel</span></a>
            </div><!--end of topbar-right-->
        </div><!--end of col-md-7-->

    </header>
    <!-- Begin: Content -->
    <section id="content" class="animated fadeIn content_height">
        <!-- Dashboard Tiles -->
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel1 panel-primary">
                    <div class="admin-form">
                        <div class="panel-body">
                            <div class="section row mbn">
                                <div class="form-horizontal">
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Transaction Id<span class="text-danger"></span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                <span class="text-danger" id="CustomErr"> </span>
                                                @Html.EditorFor(model => model.TransactionNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Transaction Id", @readonly = true } })
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Date<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
                                                @Html.EditorFor(model => model.DocDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Doc Date", @autocomplete = "Off" } })
                                                @Html.ValidationMessageFor(model => model.DocDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Customer Id<span class="text-danger">*</span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                @Html.EditorFor(model => model.CustomerId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Customer Id", @autofocus = "autofocus", @readonly = true, @style = "display:inline;width:280px;" } })
                                                <div class="input-group-btn" style="display:inline;">
                                                    <button type="button" data-toggle="modal" data-target="#editModal" onclick="ShowClientTableList();" class="btn btn-info btn_info1">...</button>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Application No<span class="text-danger"></span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                @Html.EditorFor(model => model.ApplicationNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Application No", @readonly = true } })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Loan Account No<span class="text-danger"></span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                @Html.EditorFor(model => model.LoanAccountNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Loan Account No", @readonly = true } })
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Comments<span class="text-danger"></span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                @Html.TextAreaFor(model => model.Comments, new { @class = "form-control", @placeholder = "Comments", @cols = "20", @rows = "2" })
                                                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <small style="float:right;"><span class="text-danger">* </span>indicates compulsary fields</small>
                            <hr style="margin-top:0px;" />
                            <label><b>Document Details</b></label><br /><br />
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="col-md-2 control-label">Document Type<span class="text-danger"> * </span></label>
                                        <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                    @Html.DropDownListFor(m => m.DocumentUploadVM.DocumentTypeId, (SelectList)ViewBag.DocumentTypeList, "--Select Document Type--", htmlAttributes: new { @class = "form-control" })
                                                    <span class="text-danger small">@Html.ValidationMessageFor(m => m.DocumentUploadVM.DocumentTypeId)</span>
                                        </div>
                                        <label class="col-md-2 control-label" id="lblSerialNumber"> Document Name <span class="text-danger"> * </span></label>
                                        <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                            <div class="section">
                                                <label class="field select">
                                                    @Html.DropDownListFor(m => m.DocumentUploadVM.DocumentId, (SelectList)ViewBag.DocumentList, "--Select Document Name --", htmlAttributes: new { @class = "form-control" })
                                                    <span class="text-danger small">@Html.ValidationMessageFor(m => m.DocumentUploadVM.DocumentId)</span>
                                                    <i class="arrow"></i>
                                                </label>
                                            </div>
                                        </div>
                                        <br />
                                    </div>
                                    <br />
                                    <div class="form-group">
                                        <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Specify Other</label>
                                        <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
                                            @Html.EditorFor(model => model.DocumentUploadVM.SpecifyOther, new { htmlAttributes = new { @class = "form-control", @placeholder = "Specify Other", @autocomplete = "Off" } })
                                            <span class="text-danger small">@Html.ValidationMessageFor(m => m.DocumentUploadVM.SpecifyOther)</span>
                                        </div>
                                        <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Name on Document</label>
                                        <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
                                            @Html.EditorFor(model => model.DocumentUploadVM.NameonDocument, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name on Document", @autocomplete = "Off" } })
                                            <span class="text-danger small">@Html.ValidationMessageFor(m => m.DocumentUploadVM.NameonDocument)</span>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="form-group">
                                        <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Expiry Date</label>
                                        <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
                                            @Html.EditorFor(model => model.DocumentUploadVM.ExpiryDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Expiry Date", @autocomplete = "Off" } })
                                            <span class="text-danger small">@*@Html.ValidationMessageFor(m => m.DocumentUploadVM.ExpiryDate)*@</span>
                                        </div>
                                        <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Upload Document<span class="text-danger"> * </span></label>
                                        <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                            <input type="file" id="UploadedFile" name="UploadedFile" accept=".png,.jpg,.jpeg,.gif,.pdf" />
                                            <img class="img-responsive" id="targetImg" style="height:20px;width:20px;display:none;" />
                                        </div>
                                        <div class="col-md-2">
                                            <input type="button" style="margin-left: 100px;" value="Add" class="btn btn-sm btn-primary" id="btnAddDocumentDetails" />
                                        </div>
                                    </div>
                                    <br />
                                </div>
                            </div>
                            <div class="panel-body panel-no-padding">
                                <div id="divDocumentDetails">
                                    <table cellpadding="0" style="width:100%" cellspacing="0" border="0" class="table table-striped table-bordered table-hover table-fixed-header m0" id="tblDocumentDetails">
                                        <thead>
                                            <tr>
                                                <th class="col-sm-2" style="width:7%">Sr. No.</th>
                                                <th style="text-align:left;width:12%;">Document Type</th>
                                                <th style="text-align:left;width:12%;">Document Name</th>
                                                <th style="text-align:left;width:12%;">Specify Other</th>
                                                <th style="text-align:left;width:12%;">Name on Document</th>
                                                <th style="text-align:left;width:8%;">Expiry Date</th>
                                                <th style="text-align:left;width:20%;">Upload File</th>
                                                <th class="text-center" style="width:2%">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @*@{int j = 1;}
                                                @foreach (var item in Model.DocumentUploadList)
                                                {
                                                    <tr id="@item.ID">
                                                        <td>@j</td>
                                                        <td id="@item.DocumentTypeId">@item.DocumentTypeName</td>
                                                        <td id="@item.DocumentId">@item.DocumentName</td>
                                                        <td>@item.SpecifyOther</td>
                                                        <td>@item.NameonDocument</td>
                                                        <td>
                                                            @{
                                                                string str = "";
                                                                if (item.ExpiryDate != null)
                                                                {
                                                                    str =Convert.ToDateTime(item.ExpiryDate).ToString("dd/MM/yyyy");
                                                                }
                                                                @str;
                                                            }
                                                        </td>
                                                        <td><a href="/DocumentUpload/Download/@item.ID" target=_blank>@item.FileName</a></td>
                                                        <td>
                                                            <a class="delete"><i class="fa fa-trash"></i></a>
                                                        </td>
                                                    </tr>
                                                                    j++;
                                                                }*@
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
@section javascriptsection{

    @Scripts.Render("~/bundles/jquerydataTablesJS")

    <script type="text/javascript">
        $(document).ready(function () {
            if (document.URL.indexOf("ID") != -1) {
                $("#DocumentUploadVM_DocumentId").removeAttr('disabled')
            }
            else {
                $("#DocumentUploadVM_DocumentId").attr('disabled', 'disabled')
            }
            $("#DocDate").datepicker({ dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true });
            $("#DocumentUploadVM_ExpiryDate").datepicker({ dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true });

            $("#divDocumentDetails").hide();

            if (@Model.DocumentUploadList.Count() > 0) {
                $("#divDocumentDetails").show();
            }

            $("#UploadedFile").change(function () {
                var file = this.files[0];
                fileName = file.name;
                size = file.size;
                type = file.type;
                if (type.toLowerCase() == "application/pdf" || type.toLowerCase() == "image/png" || type.toLowerCase() == "image/jpg" || type.toLowerCase() == "image/jpeg") { //I just want pdf files and only want to show
                    //upload button if it is of my desired type
                }
                else {
                    alert("Please select image or pdf file.");
                    $("#UploadedFile").val("");
                    return true;
                }
            });

            var sr_no = 0;
            var trid = 0;
            currentRow = null;

            $("#btnAddDocumentDetails").click(function () {
                $("#CustomErrr").text("");
                $('[data-toggle="tooltip"]').tooltip();
                //var actions = "<a class=\"edit\"><i class=\"fa fa-edit\" title='Edit'></i></a>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"delete\"><i class=\"fa fa-trash\" title='Delete'></i></a>"
                var actions = "<a class=\"delete\"><i class=\"fa fa-trash\" title='Delete'></i></a>"
                var index = $("#tblDocumentDetails tbody tr:last").index();
                debugger;
                var srno = 0;
                var newtrno=trid;
                if (sr_no == 0) {
                    srno = index + 2;
                    newtrno=0;
                }
                else {
                    srno = sr_no;
                }
                sr_no = 0;
                trid=0;

                var DocumentTypeId = $("#DocumentUploadVM_DocumentTypeId").val();
                var DocumentTypeName = $("#DocumentUploadVM_DocumentTypeId option:selected").text();
                var DocumentId = $("#DocumentUploadVM_DocumentId").val();
                var DocumentName = $("#DocumentUploadVM_DocumentId option:selected").text();
                var ExpiryDate = $("#DocumentUploadVM_ExpiryDate").val();
                //var filename=$("#UploadedFile").val();
                var filename =$("#targetImg").val();
                var SpecifyOther = $("#DocumentUploadVM_SpecifyOther").val();
                var NameonDocument = $("#DocumentUploadVM_NameonDocument").val();
                debugger;

                var isExist = false;
                $("#tblDocumentDetails TBODY tr").each(function() {
                    // get row
                    debugger;
                    var row = $(this);
                    // get first and second td
                    var first = row.find('td:nth-child(2)').attr('id');
                    var second = row.find('td:nth-child(3)').attr('id');
                    // if exists, remove the tr
                    if (first == DocumentTypeId && second == DocumentId) {
                        isExist = true;
                    }
                });
                if(isExist)
                {
                    alert("The same Document Type and Document Name already Exist");
                    return false;
                }
                else
                {
                    if(currentRow){
                        $("#tblDocumentDetails tbody").find($(currentRow)).replaceWith(row);
                        $("#DocumentUploadVM_DocumentTypeId").val("");
                        $("#DocumentUploadVM_DocumentId").val("");
                        $("#DocumentUploadVM_SpecifyOther").val("");
                        $("#DocumentUploadVM_NameonDocument").val("");
                        $("#DocumentUploadVM_ExpiryDate").val("");
                        $("#UploadedFile").val("");
                        currentRow = null;
                    }
                    else
                    {
                        if (DocumentTypeId!="" && DocumentId!="") {

                            var fileUpload = $("#UploadedFile").get(0);
                            var files = fileUpload.files;
                            // Create FormData object
                            fileData = new FormData();
                            // Looping over all files and add it to FormData object
                            for (var i = 0; i < files.length; i++) {
                                fileData.append("UploadedFile", files[i]);
                            }
                            var row = '<tr id=' + newtrno + '>' +
                          '<td width="10%">' + srno + '</td>' +
                          '<td width="10%" id="'+DocumentTypeId+'">' + DocumentTypeName+'</td>' +
                          '<td width="10%" id="'+DocumentId+'">' + DocumentName+'</td>' +
                          '<td width="20%">' + SpecifyOther + '</td>' +
                          '<td width="20%">' + NameonDocument + '</td>' +
                          '<td width="20%">' + ExpiryDate + '</td>' +
                          '<td width="20%"><a href="#">'+files[0].name+'</a></td>"' +
                          '<td id=' + srno +'' + actions + '</td>' +
                          '</tr>';
                            $("#tblDocumentDetails tbody").append(row);

                            // Adding one more key to FormData object
                            fileData.append('Id', srno);
                            fileData.append('DocumentTypeId', DocumentTypeId);
                            fileData.append('DocumentId', DocumentId);
                            fileData.append('ExpiryDate', ExpiryDate);
                            fileData.append('SpecifyOther', SpecifyOther);
                            fileData.append('NameonDocument', NameonDocument);
                            $.ajax({
                                url: '/DocumentUpload/AddDocument',
                                type: "POST",
                                contentType: false, // Not to set any content header
                                processData: false, // Not to process data
                                data: fileData,
                                success: function (result) {
                                },
                                error: function (err) {
                                    //alert(err.statusText);
                                }
                            });

                            $("#DocumentUploadVM_DocumentTypeId").val("");
                            $("#DocumentUploadVM_DocumentId").val("");
                            $("#DocumentUploadVM_ExpiryDate").val("");
                            $("#UploadedFile").val("");
                            $("#DocumentUploadVM_SpecifyOther").val("");
                            $("#DocumentUploadVM_NameonDocument").val("");
                            $("#divDocumentDetails").show();
                        }
                    }
                }

                $("#tblDocumentDetails TBODY TR").on("click", ".delete", function () {
                    if(confirm('Are you sure to remove?'))
                    {
                        var tr = $(this).closest('tr');
                        trid =tr.find('td:eq(0)').html();
                        tr.remove();
                        $.ajax({
                            url: '/DocumentUpload/Remove?id='+trid,
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (result) {
                                //$(this).parents('tr').remove();
                            },
                            error: function (err) {
                                alert(err.statusText);
                            }
                        });
                    }
                })
            })
        });

        function ShowClientTableList() {
            $('#divviewfilldata').empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetCustomerDetails", "DocumentUpload")',
                // dataType: "html",
                success: function (data) {
                    $('#diveditfilldata').empty();
                    $('#diveditfilldata').html(data);
                    $('#CustomerDetailsTable').dataTable();
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        $("#diveditfilldata").on("click", "tr", function () {
            var tr = $(this).closest('tr');
            var CustomerId =tr.find('td:eq(0)').html();
            var KycId =tr.find("td").eq(0).attr('id');
            var ApplicationNo =tr.find('td:eq(1)').html();
            var LoanAccountNo =tr.find('td:eq(2)').html();

            $("#CustomerId").val(CustomerId);
            $("#KycId").val(KycId);
            $("#ApplicationNo").val(ApplicationNo);
            $("#LoanAccountNo").val(LoanAccountNo);
            $("#editModal").hide();
            getdocumentbyid(KycId);
        })

        function getdocumentbyid(id) {
            debugger;
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetKycDocumentsById", "DocumentUpload")',
                data: "{Id: " + id + "}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    debugger;

                    var actions = "<a class=\"delete\"><i class=\"fa fa-trash\" title='Delete'></i></a>";

                    $("#ItemID").val(result.ID);

                    $("#divDocumentDetails").show();

                    $.each(result.DocumentUploadList, function (key, val) {
                        debugger;
                        var rowCount = $('#tblDocumentDetails >tbody >tr').length + 1;
                        var value = "";
                        if (val.ExpiryDate != null) {
                            value = new Date(parseInt(val.ExpiryDate.replace('/Date(', '')));
                            var day = value.getDate();
                            var month = value.getMonth() + 1;
                            var year = value.getFullYear();
                            value = day + "/" + month + "/" + year;
                        }
                        $('#tblDocumentDetails tbody').append('<tr id=' + val.ID + '><td>' + rowCount +
                          '<td width="20%" id="' + val.DocumentTypeId + '">' + val.DocumentTypeName + '</td>' +
                            '<td width="20%" id="' + val.DocumentId + '">' + val.DocumentName + '</td>' +
                            '<td width="20%">' + val.SpecifyOther + '</td>' +
                            '<td width="20%">' + val.NameonDocument + '</td>' +
                            '<td width="20%">' + value + '</td>' +
                            '<td width="20%"><a href="/DocumentUpload/Download/' + val.ID + '" target=_blank>' + val.FileName + '</a></td>' +
                            '<td id=' + val.ID + '' + actions + '</td>' +
                            '</tr>');
                    });

                    $("#tblDocumentDetails TBODY TR").on("click", ".delete", function () {
                        if (confirm('Are you sure to remove?')) {
                            var tr = $(this).closest('tr');
                            trid = tr.attr('id'); // table row ID
                            tr.remove();
                            $.ajax({
                                url: '/DocumentUpload/Remove?id=' + trid,
                                type: "POST",
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (result) {
                                    //$(this).parents('tr').remove();
                                },
                                error: function (err) {
                                    alert(err.statusText);
                                }
                            });
                        }
                    })

                    $("#divDocumentDetails").show();
                },
                error: function (xhr, status, error) {
                    debugger;
                    console.log(xhr.responseText);
                    alert(status.statusText);
                }
            });
        }

        $("#btn_save").click(function () {
            SaveDocument();
        });

        function SaveDocument() {
            var DocDate = $("#DocDate").val();
            if (DocDate == "") {
                $("#CustomErr").text("Please Enter Date");
                $("#DocDate").focus();
                return false;
            }
            var check=true;
            debugger;
            if ($('#tblDocumentDetails tbody tr').length == 0) {
                var DocumentTypeId= $("#DocumentUploadVM_DocumentTypeId").val();
                if (DocumentTypeId===undefined || DocumentTypeId == "") {
                    $("#CustomErr").text("Please Select Document Type");
                    $("#DocumentUploadVM_DocumentTypeId").focus();
                    return false;
                }

                var DocumentId= $("#DocumentUploadVM_DocumentId").val();
                if (DocumentId===undefined || DocumentId == "") {
                    $("#CustomErr").text("Please Select Document");
                    $("#DocumentUploadVM_DocumentId").focus();
                    return false;
                }

                if($("#DocumentUploadVM_ExpiryDate").attr('disabled')===undefined)
                {
                    var ExpiryDate= $("#DocumentUploadVM_ExpiryDate").val();
                    if (ExpiryDate===undefined|| ExpiryDate == "") {
                        $("#CustomErr").text("Please Enter Expiry Date");
                        $("#DocumentUploadVM_ExpiryDate").focus();
                        return false;
                    }
                }

                var UploadedFile= $("#UploadedFile").val();
                if (UploadedFile == "") {
                    $("#CustomErr").text("Please Select Upload Document");
                    $("#UploadedFile").focus();
                    return false;
                    check=false;
                }
            }
            debugger;
            var length=$('#tblDocumentDetails tbody tr').length;
            if(length==0)
            {
                $("#CustomErr").text("Please Click Add button then save record");
                $("#tblDocumentDetails").focus();
                return false;
            }

            var DocUploadViewModel = {};
            var lstDocUploadTrn = [];

            var fileData = new FormData();
            $("#tblDocumentDetails TBODY TR").each(function () {
                var row = $(this);
                var rowDocUploadTrn = {};
                debugger;
                rowDocUploadTrn.ID = row.attr('id');
                rowDocUploadTrn.DocumentTypeId =row.find("td").eq(1).attr('id');
                rowDocUploadTrn.DocumentId = row.find("td").eq(2).attr('id');
                rowDocUploadTrn.ExpiryDate = row.find("TD").eq(3).html();
                rowDocUploadTrn.UploadDocName =row.find("TD").eq(4).val();
                rowDocUploadTrn.SpecifyOther = row.find("TD").eq(5).html();
                rowDocUploadTrn.NameonDocument = row.find("TD").eq(6).val();
                lstDocUploadTrn.push(rowDocUploadTrn);
            });

            DocUploadViewModel.DocumentUploadList = lstDocUploadTrn;

            DocUploadViewModel.ID = $('#ItemID').val();
            DocUploadViewModel.TransactionNumber = $('#TransactionNumber').val();
            DocUploadViewModel.DocDate = $('#DocDate').val();
            DocUploadViewModel.CustomerId = $('#CustomerId').val();
            DocUploadViewModel.ApplicationNo = $('#ApplicationNo').val();
            DocUploadViewModel.LoanAccountNo = $('#LoanAccountNo').val();
            DocUploadViewModel.Comments = $('#Comments').val();
            DocUploadViewModel.KycId=$("#KycId").val();

            if(check==true)
            {
                $("#btn_save").prop("disabled", true);
                $.ajax({
                    type: "POST",
                    url: "/DocumentUpload/Insert",
                    data: JSON.stringify(DocUploadViewModel),
                    contentType: "application/json; charset=utf-8",
                    //contentType: false, // Not to set any content header
                    //processData: false, // Not to process data
                    dataType: "json",
                    success: function (r) {
                        debugger;
                        if (r == 1) {
                            $("#saveModal").modal('show');
                            $(document).click(function () {
                                window.location.href = urlRedirect;
                            });
                        }
                        else if(r==2){
                            $("#saveModal").modal('show');
                            $(document).click(function () {
                                window.location.href = urlRedirect;
                            });
                        }
                        else
                        {   $("#CustomErr").text(r);
                            $("#btn_save").prop("disabled", false);
                            return false;
                        }
                    }
                });
            }
        }

        $("#DocumentUploadVM_DocumentTypeId").change(function () {
            $("#DocumentUploadVM_DocumentId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDcoument")', // we are calling json method
                dataType: 'json',
                data: { id: $("#DocumentUploadVM_DocumentTypeId").val() },
                // here we are get value of selected country and passing same value
                //as inputto json method GetStates.
                success: function (data) {
                    var doc = "<select id='DocumentUploadVM_DocumentId'>";
                    doc = doc + '<option value="">--Select Document--</option>';
                    for (var i = 0; i < data.length; i++) {
                        doc = doc + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    doc = doc + '</select>';
                    $('#DocumentUploadVM_DocumentId').html(doc);
                    $("#DocumentUploadVM_DocumentId").removeAttr('disabled')
                },
                error: function (ex) {
                    alert('Failed to retrieve data.' + ex);
                }
            });
            return false;
        })

        $("#DocumentUploadVM_DocumentId").change(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetExpiryDate")', // we are calling json method
                dataType: 'json',
                data: { id: $("#DocumentUploadVM_DocumentId").val() },
                // here we are get value of selected country and passing same value
                //as inputto json method GetStates.
                success: function (data) {
                    debugger;
                    $("#DocumentUploadVM_ExpiryDate").attr('disabled','disabled')
                    if(data==true)
                    {
                        $("#DocumentUploadVM_ExpiryDate").removeAttr('disabled')
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve data.' + ex);
                }
            });
            return false;
        })

        function ShowEditTableList() {
            $('#divviewfilldata').empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetDocUploadTable", "DocumentUpload")',
                dataType: "html",
                data: { Operation: "Edit" },
                success: function (data) {
                    $('#divsanctionfilldata').empty();
                    $('#divsanctionfilldata').html(data);
                    $('#example').dataTable();
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        function ShowViewTableList() {
            $('#diveditfilldata').empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetDocUploadTable", "DocumentUpload")',
                dataType: "html",
                data: { Operation: "View" },
                success: function (data) {
                    $('#divsanctionfilldata').empty();
                    $('#divsanctionfilldata').html(data);
                    $('#example').dataTable();
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        $("#divsanctionfilldata").on("click", "tr", function () {
            var tr = $(this).closest('tr');
            var Id = tr.find("td").eq(0).attr('id');
            $("#editSanctionModal").hide();
            SetDocumentUploadDetails(Id);
        })

        function SetDocumentUploadDetails(id) {
            debugger;
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetDocUploadDetailsById", "DocumentUpload")',
                data: "{ID: " + id + "}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    debugger;
                    $.each(result, function (key, value) {
                        $("#" + key + "").val(value);
                    });
                    $("#ItemID").val(result.ID);
                    var actions = "<a class=\"delete\"><i class=\"fa fa-trash\" title='Delete'></i></a>";
                    var coperation=$("#operation").val();
                    if(coperation=="Edit")
                    {
                        $("#btnDelete").removeClass('disabled')
                    }
                    else{
                        $("#btnDelete").addClass('disabled')
                    }

                    $("#divDocumentDetails").show();

                    $.each(result.DocumentUploadList, function (key, val) {
                        debugger;
                        var rowCount = $('#tblDocumentDetails >tbody >tr').length + 1;
                        var value = "";
                        if (val.ExpiryDate != null) {
                            value = new Date(parseInt(val.ExpiryDate.replace('/Date(', '')));
                            var day = value.getDate();
                            var month = value.getMonth() + 1;
                            var year = value.getFullYear();
                            value = day + "/" + month + "/" + year;
                        }
                        $('#tblDocumentDetails tbody').append('<tr id=' + val.ID + '><td>' + rowCount +
                          '<td width="20%" id="' + val.DocumentTypeId + '">' + val.DocumentTypeName + '</td>' +
                            '<td width="20%" id="' + val.DocumentId + '">' + val.DocumentName + '</td>' +
                            '<td width="20%">' + val.SpecifyOther + '</td>' +
                            '<td width="20%">' + val.NameonDocument + '</td>' +
                            '<td width="20%">' + value + '</td>' +
                            '<td width="20%"><a href="/DocumentUpload/Download/' + val.ID + '" target=_blank>' + val.FileName + '</a></td>' +
                            '<td id=' + val.ID + '' + actions + '</td>' +
                            '</tr>');
                    });

                    $("#tblDocumentDetails TBODY TR").on("click", ".delete", function () {
                        if (confirm('Are you sure to remove?')) {
                            var tr = $(this).closest('tr');
                            trid = tr.attr('id'); // table row ID
                            tr.remove();
                            $.ajax({
                                url: '/DocumentUpload/Remove?id=' + trid,
                                type: "POST",
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (result) {
                                    //$(this).parents('tr').remove();
                                },
                                error: function (err) {
                                    alert(err.statusText);
                                }
                            });
                        }
                    })

                    $("#divDocumentDetails").show();
                },
                error: function (xhr, status, error) {
                    debugger;
                    console.log(xhr.responseText);
                    alert(status.statusText);
                }
            });
        }


        var urlRedirect = '@Html.Raw(@Url.Action("DocumentUpload", "DocumentUpload"))';

        function OnSuccess(response) {
            $("#saveModal").modal('show');
            $(document).click(function () {
                window.location.href = urlRedirect;
            });
        }

        function OnFailure(response) {
            alert('Error Occured');
        }

        $(function () {
            var url = '@Html.Raw(@Url.Action("Delete", "DocumentUpload"))';
            $("#btnDelete").click(function () {
                $("#deleteModal").modal('show');
            });
            $("#btnDeleteConfirm").click(function () {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: '{id: "' + $("#ItemID").val() + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data != "") {
                            $("#CustomErr").text(data);
                            return false;
                        }
                        else {
                            $("#CustomErr").empty();
                            $("#DeleteSuccessModal").modal('show');

                            $(document).click(function () {
                                window.location.href = urlRedirect;
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            });
        });
    </script>
}