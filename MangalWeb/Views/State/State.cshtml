@model MangalWeb.Model.Masters.StateViewModel
@{
    ViewBag.Title = "ShowState";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*@Styles.Render("~/Content/dataTablescss")*@
@using (Ajax.BeginForm("CreateEdit", "State", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID, new { @id = "ItemID" })

    <header id="topbar" class="affix">
        <div class="col-md-5 col-sm-4 col-xs-12">
            <div class="topbar-left">
                <h4>State Master</h4>
            </div><!--end of topbar-left-->
        </div><!--end of col-md-5-->
        <div class="col-md-7 col-sm-8 col-xs-12">
            <div class="topbar-right" id="headerbutton">
                <button href="#editModal" id="btn_edit" onclick="return ShowEditTableList();" type="button" class="@TempData["btn_editclass"]" data-toggle="modal"><span class="fa fa-pencil pr5"></span> <span class="hidden-xs">Edit</span></button>
                <button type="submit" id="btn_save" class="@TempData["btn_saveclass"]"><span class="fa fa-save pr5"></span> <span class="hidden-xs">Save</span></button>
                <button type="button" id="btnDelete" class="@TempData["btn_deleteclass"]"><span class="fa fa-trash pr5"></span> <span class="hidden-xs">Delete</span></button>
                <button href="#viewModal" id="btn_view" onclick="return ShowViewTableList();" class="@TempData["btn_viewclass"]"
                        type="button" data-toggle="modal">
                    <span class="fa fa-eye pr5"></span> <span class="hidden-xs">View</span>
                </button>
                <a href="@Html.Raw(@Url.Action("State", "State"))" type="button" data-toggle="modal" class="btn btn-alert btn-md light fw600 ml10"><span class="fa fa-close pr5"></span><span class="hidden-xs">Cancel</span></a>
            </div><!--end of topbar-right-->

        </div><!--end of col-md-7-->
    </header>

        <section id="content" class="animated fadeIn">
            <!-- Start: Topbar -->
            <!-- End: Topbar -->
            <!-- Begin: Content -->
            <!-- Dashboard Tiles -->
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel1 panel-primary">
                        <div class="admin-form">
                            <div class="panel-body">
                                <div class="section row mbn">
                                    <div class="form-horizontal">
                                        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                            <div class="form-group">
                                                <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">State Code<span class="text-danger"> * </span></label>
                                                <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                    <span class="text-danger" id="CustomErr"> </span><br />
                                                    <span class="text-danger" id="CustomErrr"> </span>
                                                    @Html.EditorFor(model => model.StateCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "State Code", @autocomplete = "Off", @autofocus = "autofocus" } })
                                                    @Html.ValidationMessageFor(model => model.StateCode, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                            <div class="form-group">
                                                <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">State Name<span class="text-danger"> * </span></label>
                                                <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                    @Html.EditorFor(model => model.StateName, new { htmlAttributes = new { @class = "form-control", @placeholder = "State Name",@autocomplete="Off"} })
                                                    @Html.ValidationMessageFor(model => model.StateName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <br />
                                        </div>
                                        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                            <div class="form-group">
                                                <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">State Name as Per CKYC <span class="text-danger"> * </span></label>
                                                <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                            @Html.DropDownListFor(m => m.CkycStateId, (SelectList)ViewBag.CkycStateList, "--Select State Name as Per CKYC --", htmlAttributes: new { @class = "form-control" })
                                                            
                                                            <span class="text-danger small">@Html.ValidationMessageFor(m => m.CkycStateId)</span>
                                                    <i class="arrow"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                            <div class="form-group">
                                                <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Country@*<span class="text-danger"> * </span>*@</label>
                                                <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                            @Html.DropDownListFor(m => m.CountryId, (SelectList)ViewBag.CountryList, "--Select Country--", htmlAttributes: new { @class = "form-control" })

                                                            @Html.ValidationMessageFor(m => m.CountryId)
                                                            <span class="field-validation-valid text-danger" data-valmsg-for="StateName" data-valmsg-replace="true"></span>                                                              </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <small style="float:right"><span class="text-danger">* </span>indicates compulsary fields</small>
        </section>
}

@section javascriptsection{
    @Scripts.Render("~/bundles/jquerydataTablesJS")
    <script type="text/javascript">

            $(document).ready(function () {

               //if (document.URL.indexOf("ID") == -1) {

                    $("#StateName").on('input', function () {
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("doesStateNameExist", "State")',
                            data: '{StateName: "' + $("#StateName").val() + '", Id: "' + $("#ItemID").val() + '"}',
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (result) {
                                if (result == "") {
                                    $("#CustomErr").empty();
                                    $("#btn_save").removeAttr('disabled')
                                }
                                else {
                                    $("#CustomErr").text(result);
                                    $("#btn_save").attr('disabled', true)
                                    return false;
                                }
                            },
                            error: function (xhr, status, error) {
                                //alert(error);
                            }
                        });
                    });

                $("#StateName").on('input', function () {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("CheckRecordonEditMode", "State")',
                        data: '{Id: "' + $("#ItemID").val() + '" }',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            if (result == "") {
                                $("#CustomErrr").empty();
                                $("#btn_save").removeAttr('disabled')
                            }
                            else {
                                $("#CustomErrr").text(result);
                                $("#btn_save").attr('disabled', true)
                                return false;
                            }
                        },
                        error: function (xhr, status, error) {
                            //alert(error);
                        }
                    });
                });

            //    }
            });

            function ShowEditTableList() {
                $('#divviewfilldata').empty();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetStateTable", "State")',
                    dataType: "html",
                    data: { Operation: "Edit" },
                    success: function (data) {
                        $('#diveditfilldata').empty();
                        $('#diveditfilldata').html(data);
                        $('#example').dataTable();
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            }

            function ShowViewTableList() {
                $('#diveditfilldata').empty();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetStateTable", "State")',
                    dataType: "html",
                    data: { Operation: "View" },
                    success: function (data) {
                        $('#divviewfilldata').empty();
                        $('#divviewfilldata').html(data);
                        $('#example').dataTable();
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            }
            var urlRedirect = '@Html.Raw(@Url.Action("State", "State"))';
            function OnSuccess(response) {

                $("#saveModal").modal('show');
                $(document).click(function () {
                    window.location.href = urlRedirect;
                });
            }

            function OnFailure(response) {
                alert("Error occured.");
            }

            $(function () {
                var url = '@Html.Raw(@Url.Action("Delete", "State"))';
                $("#btnDelete").click(function () {
                    $("#deleteModal").modal('show');
                });
                $("#btnDeleteConfirm").click(function () {
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: '{id: "' + $("#ItemID").val() + '" }',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            if (data != "") {
                                $("#CustomErr").text(data);
                                return false;
                            }
                            else {
                                $("#CustomErr").empty();
                                $("#DeleteSuccessModal").modal('show');

                                $(document).click(function () {
                                    window.location.href = urlRedirect;
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            alert(error);
                        }
                    });
                });
            });
    </script>
}

