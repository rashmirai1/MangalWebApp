@model MangalWeb.Model.Masters.AuditCheckListViewModel
@{
    ViewBag.Title = "ShowAuditCheckList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/dataTablescss")
@using (Ajax.BeginForm("CreateEdit", "AuditCheckList", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID, new { @id = "ItemID" })
    <header id="topbar" class="affix">
        <div class="col-md-5 col-sm-4 col-xs-12">
            <div class="topbar-left">
                <h4>Audit CheckList Master</h4>
            </div><!--end of topbar-left-->
        </div><!--end of col-md-5-->
        <div class="col-md-7 col-sm-8 col-xs-12">
            <div class="topbar-right" id="headerbutton">
                <button href="#editModal" id="btn_edit" onclick="return ShowEditTableList();" type="button" class="@TempData["btn_editclass"]" data-toggle="modal"><span class="fa fa-pencil pr5"></span> <span class="hidden-xs">Edit</span></button>
                <button type="submit" id="btn_save" class="@TempData["btn_saveclass"]"><span class="fa fa-save pr5"></span> <span class="hidden-xs">Save</span></button>
                <button type="button" id="btnDelete" class="@TempData["btn_deleteclass"]"><span class="fa fa-trash pr5"></span> <span class="hidden-xs">Delete</span></button>
                <button href="#viewModal" id="btn_view" onclick="return ShowViewTableList();" class="@TempData["btn_viewclass"]"
                        type="button" data-toggle="modal">
                    <span class="fa fa-eye pr5"></span> <span class="hidden-xs">View</span>
                </button>
                <a href="@Html.Raw(@Url.Action("AuditCheckList", "AuditCheckList"))" type="button" data-toggle="modal" class="btn btn-alert btn-md light fw600 ml10"><span class="fa fa-close pr5"></span><span class="hidden-xs">Cancel</span></a>
            </div><!--end of topbar-right-->

        </div><!--end of col-md-7-->
    </header>

    <section id="content" class="animated fadeIn">
        <!-- Start: Topbar -->
        <!-- End: Topbar -->
        <!-- Begin: Content -->
        <!-- Dashboard Tiles -->
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel1 panel-primary">
                    <div class="admin-form">
                        <div class="panel-body">
                            <div class="section row mbn">
                                <div class="form-horizontal">
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Effective Date<span class="text-danger">*</span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                <span class="text-danger" id="CustomErr"> </span><br />
                                                <span class="text-danger" id="CustomErrr"> </span>
                                                @Html.EditorFor(model => model.EffectiveDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Effective Date", @autocomplete = "Off" } })
                                                @Html.ValidationMessageFor(model => model.EffectiveDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <br />
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Category of Audit<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                        @Html.DropDownListFor(m => m.CategoryAudit, (SelectList)ViewBag.AuditCategoryList, "--Select Category of Audit--", htmlAttributes: new { @class = "form-control" })
                                                        <span class="text-danger small">@Html.ValidationMessageFor(m => m.CategoryAudit)</span>
                                            </div>
                                        </div>
                                    </div>
                                <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12" style="margin-top:10px;">
                                    <div class="form-group">
                                        <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Audit CheckPoint<span class="text-danger">*</span></label>
                                        <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                            <span class="text-danger" id="CustomErr"> </span>
                                            @Html.TextAreaFor(model => model.AuditCheckPoint, new { @class = "form-control", @placeholder = "Audit CheckPoint",@maxlength="100" })
                                            @Html.ValidationMessageFor(model => model.AuditCheckPoint, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <br />
                                </div>
                                <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                    <div class="form-group">
                                        <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Status<span class="text-danger"> * </span></label>
                                        <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                    @{
                                                        var statuslist = new SelectList(new[]
                                                        {
                                                                    new SelectListItem { Text = "Select Status"},
                                                                    new SelectListItem { Text = "Active", Value = "Active"},
                                                                    new SelectListItem { Text = "Inactive", Value = "Inactive"},
                                                                    }, "Value", "Text");
                                                    }
                                                    @Html.DropDownListFor(m => m.Status, statuslist, new { @class = "form-control" })
                                                    <span class="text-danger">@Html.ValidationMessageFor(m => m.Status)</span>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            </div>
                                                        <small style="float:right"><span class="text-danger">* </span>indicates compulsary fields</small>
                                                    </section>
                                                        }

@section javascriptsection{

    @Scripts.Render("~/bundles/jquerydataTablesJS")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#CustomErrr").text("");
            $("#EffectiveDate").datepicker({ dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true });
        });

        $("#EffectiveDate").on('change', function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("CheckRecordonEditMode", "AuditCheckList")',
                data: '{Id: "' + $("#ItemID").val() + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result == "") {
                        $("#CustomErrr").empty();
                        $("#btn_save").removeAttr('disabled')
                    }
                    else {
                        $("#CustomErrr").text(result);
                        $("#btn_save").attr('disabled', true)
                        return false;
                    }
                },
                error: function (xhr, status, error) {
                    //alert(error);
                }
            });
        });

        $("#btn_save").click(function () {
            //SaveAuditCheckList();
        });


        function SaveAuditCheckList() {
            debugger;
            var EffectiveDate = $("#EffectiveDate").val();
            if (EffectiveDate == "") {
                $("#CustomErrr").text("Please Enter Effective Date");
                $("#EffectiveDate").focus();
                return;
            }
            //var CategoryAudit = $("#CategoryAudit").val();
            //if (CategoryAudit == "") {
            //    $("#CustomErr").text("Please Select Category Audit");
            //    $("#CategoryAudit").focus();
            //    return;
            //}

            //var auditcheckpoint = $("#AuditCheckPoint").val();
            //if (auditcheckpoint == "") {
            //    $("#CustomErr").text('Please Enter Audit CheckPoint');
            //    $("#AuditCheckPoint").focus();
            //    return;
            //}

            //var status = $("#Status").val();
            //if (auditcheckpoint == "") {
            //    $("#CustomErr").text('Please Select Status');
            //    $("#Status").focus();
            //    return;
            //}


            $("#btn_save").prop("disabled", true);
            var AuditViewModel = {};

            AuditViewModel.ID = $('#ItemID').val();
            AuditViewModel.EffectiveDate = $('#EffectiveDate').val();
            AuditViewModel.CategoryAudit = $('#CategoryAudit').val();
            AuditViewModel.AuditCheckPoint = $('#AuditCheckPoint').val();
            AuditViewModel.Status = $('#Status').val();

            $.ajax({
                type: "POST",
                url: "/AuditCheckList/Insert",
                data: JSON.stringify(AuditViewModel),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    if (r == 1) {
                        OnSuccess("Success");
                    }
                    else {
                        OnSuccess("Success");
                    }
                    $("#btn_save").prop("disabled", false);
                }
            });
        }

        function ShowEditTableList() {
            $('#divviewfilldata').empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetAuditCheckListTable", "AuditCheckList")',
                dataType: "html",
                data: { Operation: "Edit" },
                success: function (data) {
                    $('#diveditfilldata').empty();
                    $('#diveditfilldata').html(data);
                    $('#example').dataTable();
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        function ShowViewTableList() {
            $('#diveditfilldata').empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetAuditCheckListTable", "AuditCheckList")',
                dataType: "html",
                data: { Operation: "View" },
                success: function (data) {
                    $('#divviewfilldata').empty();
                    $('#divviewfilldata').html(data);
                    $('#example').dataTable();
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        var urlRedirect = '@Html.Raw(@Url.Action("AuditCheckList", "AuditCheckList"))';
        function OnSuccess(response) {

            $("#saveModal").modal('show');
            $(document).click(function () {
                window.location.href = urlRedirect;
            });
        }

        function OnFailure(response) {
            alert("Error occured.");
        }

        $(function () {
            var url = '@Html.Raw(@Url.Action("Delete", "AuditCheckList"))';
            $("#btnDelete").click(function () {
                $("#deleteModal").modal('show');
            });
            $("#btnDeleteConfirm").click(function () {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: '{id: "' + $("#ItemID").val() + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data != "") {
                            $("#CustomErr").text(data);
                            return false;
                        }
                        else {
                            $("#CustomErr").empty();
                            $("#DeleteSuccessModal").modal('show');

                            $(document).click(function () {
                                window.location.href = urlRedirect;
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            });
        });
    </script>
}

