@model MangalWeb.Model.Transaction.KYCBasicDetailsVM
@{
    ViewBag.Title = "ShowKyc";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap.min.css" />
@using (Ajax.BeginForm("CreateEdit", "KYC", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.KYCID, new { @id = "ItemID" })
    <header id="topbar" class="affix">
        <div class="col-md-5 col-sm-4 col-xs-12">
            <div class="topbar-left">
                <h4>KYC</h4>
            </div><!--end of topbar-left-->
        </div><!--end of col-md-5-->
        <div class="col-md-7 col-sm-8 col-xs-12">
            <div class="topbar-right" id="headerbutton">
                @*<button href="#editModal" id="btn_edit" onclick="return ShowEditTableList();" disabled="disabled" type="button" class="@TempData["btn_editclass"]" data-toggle="modal"><span class="fa fa-pencil pr5"></span> <span class="hidden-xs">Edit</span></button>*@
                <button type="submit" id="btn_save" class="@TempData["btn_saveclass"]" disabled="disabled"><span class="fa fa-save pr5"></span> <span class="hidden-xs">Save</span></button>
                @*<button type="button" id="btnDelete" class="@TempData["btn_deleteclass"]" disabled="disabled"><span class="fa fa-trash pr5"></span> <span class="hidden-xs">Delete</span></button>*@
                @*<button href="#viewModal" id="btn_view"  disabled="disabled" onclick="return ShowViewTableList();" class="@TempData["btn_viewclass"]"
                            type="button" data-toggle="modal">
                        <span class="fa fa-eye pr5"></span> <span class="hidden-xs">View</span>
                    </button>*@
                <a href="@Html.Raw(@Url.Action("Index", "KYC"))" type="button" data-toggle="modal" class="btn btn-alert btn-md light fw600 ml10"><span class="fa fa-close pr5"></span><span class="hidden-xs">Cancel</span></a>
            </div><!--end of topbar-right-->
        </div><!--end of col-md-7-->
    </header>
    <section id="content" class="animated fadeIn">
        <input id="isMobileVerified" name="isMobileVerified" type="hidden" value="0">
        <input name="Trans_KYCAddresses[0].AddressCategory" id="Trans_KYCAddresses_0__AddressCategory" type="hidden" value="01" />
        <input name="Trans_KYCAddresses[1].AddressCategory" id="Trans_KYCAddresses_1__AddressCategory" type="hidden" value="03" />
        <!-- Start: Topbar -->
        <!-- End: Topbar -->
        <!-- Begin: Content -->
        <!-- Dashboard Tiles -->
           <div class="row">
            <div class="col-md-12">
                <div class="panel panel1 panel-primary">
                    <div class="admin-form">
                        <div class="panel-body">
                            <div class="section row mbn">
                                <div class="form-horizontal">
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <div style="display:none">@Html.ValidationSummary()</div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">PAN No.</label>
                                                <div class="col-lg-2 col-md-2 col-sm-5 col-xs-12">
                                                    <span class="text-danger" id="CustomErr"> </span>
                                                    @Html.EditorFor(model => model.PANNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "PAN No.", @autofocus = "autofocus", @maxlength = "10", @autocomplete = "off", @style = "text-transform: uppercase" } })
                                                    @Html.ValidationMessageFor(model => model.PANNo, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-sm-5 col-xs-12">
                                                    <button id="btnUpdate" type="button" class="mb -xs mt-xs mr-xs btn btn-primary" style="padding: 5px;"><span class="fa fa-pencil pr5"></span> <span class="hidden-xs">Update Details</span></button>
                                                </div>
                                                <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Aadhaar No.</label>
                                                <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                    @Html.EditorFor(model => model.AdhaarNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Aadhaar No", @maxlength = "12", @autocomplete = "off", @onkeypress = "return event.charCode == 46 || (event.charCode >= 48 && event.charCode <= 57)", @min = "0" } })
                                                    @Html.ValidationMessageFor(model => model.AdhaarNo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <label id="negativeCustomerErr" class="text-danger"></label>
                                        </div>
                                        <div id="disabledFields">
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Upload Photo<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input type="file" name="uploadFile" id="uploadFile" class="form-data" accept=".png,.jpg,.jpeg,.gif,.pdf" />
                                                        @Html.ValidationMessageFor(model => model.KycPhoto, "", new { @class = "text-danger" })
                                                        <div id="kycPhoto">
                                                        </div>
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Type</label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.KycType, new { htmlAttributes = new { @class = "form-control", @placeholder = "Type" } })
                                                        @Html.ValidationMessageFor(model => model.KycType, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <label id="negativeCustomerErr" class="text-danger"></label>
                                            </div>
                                            <hr style="border: 1px solid #DDD;margin-bottom: 20px;">
                                            <label style="padding-left:20px;"><b>Identity Details</b></label>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12" style="margin-top:15px;">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Customer ID<span class="text-danger">  </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.CustomerID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Customer ID", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Application No<span class="text-danger">  </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.ApplicationNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Application No", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.ApplicationNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Application Date<span class="text-danger">  </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.AppliedDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Application Date", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.AppliedDate, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Applicant Prefix<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.DropDownListFor(model => model.ApplicantPrefix,
new List<SelectListItem> {
    new SelectListItem { Value = "" , Text = "Select" },
new SelectListItem { Value = "Mr" , Text = "Mr" },
new SelectListItem { Value = "Ms" , Text = "Ms" },
new SelectListItem { Value = "Mrs" , Text = "Mrs" }
},
new { @class = "form-control" })

                                                        @Html.ValidationMessageFor(model => model.ApplicantPrefix, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Applicant Name<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.AppFName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Applicant Name", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.AppFName, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Middle Name<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.AppMName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Middle Name", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.AppMName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Last Name<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.AppLName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.AppLName, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Mother Name<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mother Name", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Father / Spouse<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.DropDownListFor(model => model.Father_Spouse,
                                                                new List<SelectListItem> {
                                                                    new SelectListItem { Value = "" , Text = "Select" },
                                                                new SelectListItem { Value = "01" , Text = "Father" },
                                                                new SelectListItem { Value = "02" , Text = "Spouse" }
                                                                },
                                                                        new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Father_Spouse, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Father / Spouse Name<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-12">
                                                        @Html.DropDownListFor(model => model.FatherPrefix,
new List<SelectListItem> {
    new SelectListItem { Value = "" , Text = "Select" },
new SelectListItem { Value = "Mr" , Text = "Mr" },
new SelectListItem { Value = "Ms" , Text = "Ms" },
new SelectListItem { Value = "Mrs" , Text = "Mrs" }
},
new { @class = "form-control",@style="width: 80px;" })

                                                        @Html.ValidationMessageFor(model => model.ApplicantPrefix, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        @Html.EditorFor(model => model.Spouse, new { htmlAttributes = new { @class = "form-control", @placeholder = "Father / Spouse Name" } })
                                                        @Html.ValidationMessageFor(model => model.Spouse, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Gender<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.DropDownListFor(model => model.Gender,
                                                                new List<SelectListItem> {
                                                                new SelectListItem { Value = "" , Text = "Select Gender" },
                                                                new SelectListItem { Value = "1" , Text = "Female" },
                                                                new SelectListItem { Value = "2" , Text = "Male" },
                                                                new SelectListItem { Value = "3" , Text = "Transgender" }
                                                                },
                                                                        new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Birth Date<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "DD/MM/YYYY",@autocomplete="off" } })
                                                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Age</label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @placeholder = "Age", @readonly = true } })
                                                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">CKYCNo<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.CKYCNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "CKYCNo" } })
                                                        @Html.ValidationMessageFor(model => model.CKYCNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Marital Status<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.DropDownListFor(model => model.MaritalStatus,
new List<SelectListItem> {
    new SelectListItem { Value = "" , Text = "Select Marital Status" },
new SelectListItem { Value = "01" , Text = "Married" },
new SelectListItem { Value = "02" , Text = "Unmarried" },
new SelectListItem { Value = "03" , Text = "Divorced" },
new SelectListItem { Value = "03" , Text = "Widowed" },
new SelectListItem { Value = "03" , Text = "Engaged" },
new SelectListItem { Value = "03" , Text = "Separated" },
new SelectListItem { Value = "03" , Text = "cohabitating" }
},
new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Telephone No</label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.TelephoneNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Telephone No", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.TelephoneNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Mobile No<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                                        <span class="text-danger" id="CustomErr"> </span>
                                                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mobile No", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                                        <span class="text-alert" id="otpError"></span>
                                                    </div>

                                                    <div class="col-lg-1 col-md-1 col-sm-1 col-xs-12">
                                                        <button id="sendVerificationCode" type="button" class="mb -xs mt-xs mr-xs btn btn-primary" style="padding: 5px;margin-left: -20px;"><span class="fa fa-mobile pr5"></span> <span class="hidden-xs">Send OTP</span></button>
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label"> Verification Code <span class="text-danger"> * </span></label>
                                                    <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
                                                        <span class="text-danger" id="CustomErr"> </span>
                                                        <input type="text" class="form-control" id="verifyText" placeholder="Enter OTP">
                                                        <span id="verifyError" class="text-alert"></span>
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
                                                        <button id="btnVerifyMobile" type="button" class="mb -xs mt-xs mr-xs btn btn-primary" style="padding: 5px;"><span class="fa fa-check pr5"></span> <span class="hidden-xs">Verify OTP</span></button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Email id<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <span class="text-danger" id="CustomErr"> </span>
                                                        @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email id", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Source Of Application<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <span class="text-danger" id="CustomErr"> </span>
                                                        @Html.DropDownListFor(m => m.SourceofApplicationID, (SelectList)ViewBag.SourceList, "--Select Source--", htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.SourceofApplicationID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Source Type<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <span class="text-danger" id="CustomErr"> </span>
                                                        @Html.EditorFor(model => model.SourceType, new { htmlAttributes = new { @class = "form-control", @placeholder = "Source Type", @readonly=true } })
                                                        @Html.ValidationMessageFor(model => model.SourceType, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Existing PL Case No<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <span class="text-danger" id="CustomErr"> </span>
                                                        @Html.EditorFor(model => model.ExistingPLCaseNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "ExistingPLCaseNo", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.ExistingPLCaseNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <hr style="border: 1px solid #DDD;margin-bottom: 20px;">
                                            <label style="padding-left:20px;"><b>Address Details 1(Present Address)</b></label>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12" style="margin-top:15px;">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Building/House Name
                                                        <span class="text-danger">* </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <span class="text-danger" id="CustomErr"> </span>
                                                        @Html.EditorFor(model => model.BldgHouseName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Building/House Name" } })
                                                        @Html.ValidationMessageFor(model => model.BldgHouseName, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Road
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <span class="text-danger" id="CustomErr"> </span> @Html.EditorFor(model => model.Road, new { htmlAttributes = new { @class = "form-control", @placeholder = "Road" } })
                                                        @Html.ValidationMessageFor(model => model.Road, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Building/ Plot No
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.BldgPlotNo, new { htmlAttributes = new { @class = "form-control", @placeholder = " Building/ Plot No" } })
                                                        @Html.ValidationMessageFor(model => model.BldgPlotNo, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Room/Block No
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                         @Html.EditorFor(model => model.RoomBlockNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Room/Block No" } })
                                                        @Html.ValidationMessageFor(model => model.RoomBlockNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Nearest landmark
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.Landmark, new { htmlAttributes = new { @class = "form-control", @placeholder = "Landmark" } })
                                                        @Html.ValidationMessageFor(model => model.Landmark, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Distance (km)
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                         @Html.EditorFor(model => model.Distance, new { htmlAttributes = new { @class = "form-control", @placeholder = "Room/Block No"} })
                                                        @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Pin Code
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <span class="text-danger" id="CustomErr"> </span>
                                                        @Html.DropDownListFor(m => m.PinCode, (SelectList)ViewBag.PinCodeList, "--Select PinCode--", htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        State
                                                        <span class="text-danger">  </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <span class="text-danger" id="CustomErr"> </span>
                                                        @Html.HiddenFor(m => m.StateID)
                                                        @Html.Editor("state", new { htmlAttributes = new { @class = "form-control", @placeholder = "State", @autofocus = "autofocus", @readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        City
                                                        <span class="text-danger"> </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.HiddenFor(m => m.CityID)
                                                        @Html.Editor("city", new { htmlAttributes = new { @class = "form-control", @placeholder = "City", @readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Area
                                                        <span class="text-danger">  </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.HiddenFor(m => m.Area)
                                                        @Html.Editor("area", new { htmlAttributes = new { @class = "form-control", @placeholder = "Area",@readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Zone
                                                        <span class="text-danger">  </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.HiddenFor(m => m.ZoneID)
                                                        @Html.Editor("zone", new { htmlAttributes = new { @class = "form-control", @placeholder = "Zone",@readonly = "readonly" } })
                                                        @Html.ValidationMessageFor(model => model.ZoneID, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Residence<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.DropDownListFor(model => model.ResidenceCode,
new List<SelectListItem> {
new SelectListItem { Value = "" , Text = "Select Residence Code" },
new SelectListItem { Value = "01" , Text = "Owned" },
new SelectListItem { Value = "02" , Text = "Rented" }
},
new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.ResidenceCode, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <hr style="border: 1px solid #DDD;margin-bottom: 20px;">
                                            <label style="padding-left:20px;"><b>Address Details 2(Permanent Address)</b></label>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12" style="margin-top:15px;">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Building/House Name
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.HiddenFor(x => x.Trans_KYCAddresses[0].ID)
                                                        @Html.EditorFor(x => x.Trans_KYCAddresses[0].BuildingHouseName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Building/House Name"} })
                                                        @Html.ValidationMessageFor(x => x.Trans_KYCAddresses[0].BuildingHouseName, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Road
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(x => x.Trans_KYCAddresses[0].Road, new { htmlAttributes = new { @class = "form-control", @placeholder = "Road" } })
                                                        @Html.ValidationMessageFor(x => x.Trans_KYCAddresses[0].Road, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Building/ Plot No
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(x => x.Trans_KYCAddresses[0].BuildingPlotNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Building Plot No" } })
                                                        @Html.ValidationMessageFor(x => x.Trans_KYCAddresses[0].BuildingPlotNo, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-m-2 col-sm-2 col-xs-12 control-label">
                                                        Room/Block No
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(x => x.Trans_KYCAddresses[0].RoomBlockNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Room Block No" } })
                                                        @Html.ValidationMessageFor(x => x.Trans_KYCAddresses[0].RoomBlockNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Nearest landmark
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(x => x.Trans_KYCAddresses[0].NearestLandmark, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nearest Landmark" } })
                                                        @Html.ValidationMessageFor(x => x.Trans_KYCAddresses[0].NearestLandmark, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Distance (km)
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(x => x.Trans_KYCAddresses[0].Distance_km, new { htmlAttributes = new { @class = "form-control", @placeholder = "Distance (KM)" } })
                                                        @Html.ValidationMessageFor(x => x.Trans_KYCAddresses[0].Distance_km, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Pin Code
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <select name="Trans_KYCAddresses[0].PinCode" id="Trans_KYCAddresses_0__PinCode" class="form-control">
                                                            @foreach (var item in ViewBag.PinCodes)
                                                            {
                                                                <option value="@item.Pc_Id">@item.Pc_Desc</option>
                                                            }
                                                        </select>
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        State
                                                        <span class="text-danger">  </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input type="hidden" name="Trans_KYCAddresses[0].StateID" id="Trans_KYCAddresses_0__StateID">
                                                        <input class="form-control" id="statePermanentAdd" type="text" readonly="readonly">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        City
                                                        <span class="text-danger">  </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input type="hidden" name="Trans_KYCAddresses[0].CityID" id="Trans_KYCAddresses_0__CityID">
                                                        <input class="form-control" id="cityPermanentAdd" type="text" readonly="readonly">
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Area
                                                        <span class="text-danger">  </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input type="hidden" name="Trans_KYCAddresses[0].Area" id="Trans_KYCAddresses_0__Area">
                                                        <input class="form-control" id="areaPermanentAdd" type="text" readonly="readonly">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Zone
                                                        <span class="text-danger">  </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input type="hidden" name="Trans_KYCAddresses[0].ZoneId" id="Trans_KYCAddresses_0__ZoneId">
                                                        <input class="form-control" id="zonePermanentAdd" type="text" readonly="readonly">
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Residence<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <select name="Trans_KYCAddresses[0].ResidenceCode" id="Trans_KYCAddresses_0__ResidenceCode" class="form-control">
                                                            <option value="">Select Residence Code</option>
                                                            <option value="01">Owned</option>
                                                            <option value="02">Rented</option>
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <hr style="border: 1px solid #DDD;margin-bottom: 20px;">
                                            <label style="padding-left:20px;"><b>Occupation Details</b></label>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Present Annual Income<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.PresentIncome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Present Annual Income", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.PresentIncome, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Occupation Type<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.DropDownListFor(model => model.Occupation,
new List<SelectListItem> {
    new SelectListItem { Value = "" , Text = "Select Occupation Type" },
new SelectListItem { Value = "01" , Text = "Salaried" },
new SelectListItem { Value = "02" , Text = "Self Employed Professional" },
new SelectListItem { Value = "03" , Text = "Self Employed" },
new SelectListItem { Value = "04" , Text = "Others" }
},
new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Specify if Other<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.OccupationOther, new { htmlAttributes = new { @class = "form-control", @placeholder = "Occupation Other", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.OccupationOther, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Designation<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", @placeholder = "Designation"} })
                                                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Name of Organization<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.OrganizationName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name of Organization" } })
                                                        @Html.ValidationMessageFor(model => model.OrganizationName, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Industry Type<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.DropDownListFor(model => model.IndustriesType,
new List<SelectListItem> {
new SelectListItem { Value = "" , Text = "Select Industry Type" },
new SelectListItem { Value = "Agriculture" , Text = "Agriculture" },
new SelectListItem { Value = "consultancy" , Text = "consultancy" },
new SelectListItem { Value = "Banking" , Text = "Banking" },
new SelectListItem { Value = "Freelancer" , Text = "Freelancer" },

new SelectListItem { Value = "health" , Text = "health" },
new SelectListItem { Value = "conract worker" , Text = "conract worker" },
new SelectListItem { Value = "manufacturing" , Text = "manufacturing" },
new SelectListItem { Value = "professional" , Text = "professional" },

new SelectListItem { Value = "retail trading" , Text = "retail trading" },
new SelectListItem { Value = "small scale industries" , Text = "small scale industries" },
new SelectListItem { Value = "software" , Text = "software" },
new SelectListItem { Value = "transport" , Text = "transport" },

new SelectListItem { Value = "others" , Text = "others" }
},
new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.IndustriesType, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Specify If Other<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.IndustryOther, new { htmlAttributes = new { @class = "form-control", @placeholder = "Industry Other", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.IndustryOther, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                            </div>
                                            <hr style="border: 1px solid #DDD;margin-bottom: 20px;">
                                            <label style="padding-left:20px;"><b>Office Address</b></label>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Building/House Name
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input type="hidden" id="Trans_KYCAddresses_1__ID"/>
                                                        <input name="Trans_KYCAddresses[1].BuildingHouseName" class="form-control" id="Trans_KYCAddresses_1__BuildingHouseName" type="text" data-val-required="This field is required." data-val="true">
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Road
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input name="Trans_KYCAddresses[1].Road" class="form-control" id="Trans_KYCAddresses_1__Road" type="text" data-val-required="This field is required." data-val="true">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Building/ Plot No
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input name="Trans_KYCAddresses[1].BuildingPlotNo" class="form-control" id="Trans_KYCAddresses_1__BuildingPlotNo" type="text" data-val-required="This field is required." data-val="true">
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Room/Block No
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input name="Trans_KYCAddresses[1].RoomBlockNo" class="form-control" id="Trans_KYCAddresses_1__RoomBlockNo" type="text" data-val-required="This field is required." data-val="true">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Nearest landmark
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input name="Trans_KYCAddresses[1].NearestLandmark" class="form-control" id="Trans_KYCAddresses_1__NearestLandmark" type="text" data-val-required="This field is required." data-val="true">
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Distance (km)
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input name="Trans_KYCAddresses[1].Distance_km" class="form-control" id="Trans_KYCAddresses_1__Distance_km" type="text" data-val-required="This field is required." data-val="true">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Pin Code
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <select name="Trans_KYCAddresses[1].PinCode" id="Trans_KYCAddresses_1__PinCode" class="form-control">
                                                            @foreach (var item in ViewBag.PinCodes)
                                                            {
                                                                <option value="@item.Pc_Id">@item.Pc_Desc</option>
                                                            }
                                                        </select>
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        State
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input type="hidden" name="Trans_KYCAddresses[1].StateID" id="Trans_KYCAddresses_1__StateID">
                                                        <input class="form-control" id="stateOfficeAdd" type="text" readonly="readonly">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        City
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input type="hidden" name="Trans_KYCAddresses[1].CityID" id="Trans_KYCAddresses_1__CityID">
                                                        <input class="form-control" id="cityOfficeAdd" type="text" readonly="readonly">
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Area
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input type="hidden" name="Trans_KYCAddresses[1].Area" id="Trans_KYCAddresses_1__Area">
                                                        <input class="form-control" id="areaOfficeAdd" type="text" readonly="readonly">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">
                                                        Zone
                                                        <span class="text-danger"> * </span>
                                                    </label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        <input type="hidden" name="Trans_KYCAddresses[1].ZoneId" id="Trans_KYCAddresses_1__ZoneId">
                                                        <input class="form-control" id="zoneOfficeAdd" type="text" readonly="readonly">
                                                    </div>
                                                </div>
                                            </div>
                                            <hr style="border: 1px solid #DDD;margin-bottom: 20px;">
                                            <label style="padding-left:20px;"><b>Nominee Details</b></label>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Nominee First Name<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.NomFName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nominee First Name", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.NomFName, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Nominee Middle Name<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.NomMName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nominee Middle Name", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.NomMName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Nominee Last Name<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.NomLName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nominee Last Name", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.NomLName, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Nominee Address<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.TextAreaFor(model => model.NomAddress, new { @class = "form-control", @placeholder = "Nominee Address", @autofocus = "autofocus", @cols = "2", @rows = "2" })
                                                        @Html.ValidationMessageFor(model => model.NomAddress, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Nominee Mobile No<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.NomineeMobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nominee Mobile No", @autofocus = "autofocus" } })
                                                        @Html.ValidationMessageFor(model => model.NomineeMobileNo, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Nominee Relationship<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.DropDownListFor(model => model.NomRelation,
new List<SelectListItem> {
new SelectListItem { Value = "Aunt" , Text = "Aunt" },
new SelectListItem { Value = "Brother" , Text = "Brother" },
new SelectListItem { Value = "Cousin" , Text = "Cousin" },
new SelectListItem { Value = "Daughter" , Text = "Daughter" },

new SelectListItem { Value = "Father" , Text = "Father" },
new SelectListItem { Value = "Grandchildren" , Text = "Grandchildren" },
new SelectListItem { Value = "Granddaughter" , Text = "Granddaughter" },
new SelectListItem { Value = " Grandfather" , Text = " Grandfather" },

new SelectListItem { Value = "Grandmother" , Text = "Grandmother" },
new SelectListItem { Value = "Grandson" , Text = "Grandson" },
new SelectListItem { Value = "husband" , Text = "husband" },
new SelectListItem { Value = "Mother" , Text = "Mother" },

new SelectListItem { Value = "Nephew" , Text = "Nephew" },
new SelectListItem { Value = "Son" , Text = "Son" },
new SelectListItem { Value = "Self" , Text = "Self" },
new SelectListItem { Value = "Sister" , Text = "Sister" },

new SelectListItem { Value = "Uncle" , Text = "Uncle" },
new SelectListItem { Value = "Wife" , Text = "Wife" },

new SelectListItem { Value = "others" , Text = "others" }
},
new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.NomRelation, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Nominee Pan No<span class="text-danger"> * </span></label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.NomineePanNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nominee Pan No", @maxlength = "10", @autocomplete = "off", @style = "text-transform: uppercase" } })
                                                        @Html.ValidationMessageFor(model => model.NomineePanNo, "", new { @class = "text-danger" })
                                                    </div>
                                                    <label class="col-lg-2 col-md-2 col-sm-2 col-xs-12 control-label">Nominee Aadhaar No</label>
                                                    <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                                        @Html.EditorFor(model => model.NomineeAdharNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nominee Aadhaar No", @maxlength = "12", @autocomplete = "off", @onkeypress = "return event.charCode == 46 || (event.charCode >= 48 && event.charCode <= 57)", @min = "0" } })
                                                        @Html.ValidationMessageFor(model => model.NomineeAdharNo, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <hr style="border: 1px solid #DDD;margin-bottom: 20px;">
                                            <label style="padding-left:20px;"><b>Document Details</b></label>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <label class="col-md-2 control-label">Document Type<span class="text-danger"> * </span></label>
                                                        <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                            <div class="section">
                                                                <label class="field select">
                                                                    @Html.DropDownListFor(m => m.DocumentUploadVM.DocumentTypeId, (SelectList)ViewBag.DocumentTypeList, "--Select Document Type--", htmlAttributes: new { @class = "form-control" })
                                                                    <span class="text-danger small">@Html.ValidationMessageFor(m => m.DocumentUploadVM.DocumentTypeId)</span>
                                                                    <i class="arrow"></i>
                                                                </label>
                                                            </div>
                                                        </div>
                                                        <label class="col-md-2 control-label" id="lblSerialNumber"> Document Name <span class="text-danger"> * </span></label>
                                                        <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                            <div class="section">
                                                                <label class="field select">
                                                                    @Html.DropDownListFor(m => m.DocumentUploadVM.DocumentId, (SelectList)ViewBag.DocumentList, "--Select Document Name --", htmlAttributes: new { @class = "form-control" })
                                                                    <span class="text-danger small">@Html.ValidationMessageFor(m => m.DocumentUploadVM.DocumentId)</span>
                                                                    <i class="arrow"></i>
                                                                </label>
                                                            </div>
                                                        </div>
                                                        <br />
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Specify Other</label>
                                                        <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
                                                            @Html.EditorFor(model => model.DocumentUploadVM.SpecifyOther, new { htmlAttributes = new { @class = "form-control", @placeholder = "Specify Other", @autocomplete = "Off" } })
                                                            <span class="text-danger small">@Html.ValidationMessageFor(m => m.DocumentUploadVM.SpecifyOther)</span>
                                                        </div>
                                                        <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Name on Document</label>
                                                        <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
                                                            @Html.EditorFor(model => model.DocumentUploadVM.NameonDocument, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name on Document", @autocomplete = "Off" } })
                                                            <span class="text-danger small">@Html.ValidationMessageFor(m => m.DocumentUploadVM.NameonDocument)</span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Expiry Date</label>
                                                        <div class="col-lg-4 col-md-4 col-sm-3 col-xs-12">
                                                            @Html.EditorFor(model => model.DocumentUploadVM.ExpiryDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Expiry Date", @autocomplete = "Off" } })
                                                            <span class="text-danger small">@Html.ValidationMessageFor(m => m.DocumentUploadVM.ExpiryDate)</span>
                                                        </div>
                                                        <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Upload Document<span class="text-danger"> * </span></label>
                                                        <div class="col-lg-2 col-md-2 col-sm-3 col-xs-12">
                                                            <input type="file" id="UploadedFile" name="UploadedFile" accept=".png,.jpg,.jpeg,.gif,.pdf" />
                                                            <img class="img-responsive" id="targetImg" style="height:20px;width:20px;display:none;" />
                                                        </div>
                                                        <div class="col-md-2">
                                                            <input type="button" style="margin-left: 100px;" value="Add" class="btn btn-sm btn-primary" id="btnAddDocumentDetails" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="panel-body panel-no-padding">
                                                <div id="divDocumentDetails">
                                                    <table cellpadding="0" style="width:90%" cellspacing="0" border="0" class="table table-striped table-bordered table-hover table-fixed-header m0" id="tblDocumentDetails">
                                                        <thead>
                                                            <tr>
                                                                <th class="col-sm-2" style="width:2%">Sr. No.</th>
                                                                <th style="text-align:left">Document Type</th>
                                                                <th style="text-align:left">Document Name</th>
                                                                <th style="text-align:left">Specify Other</th>
                                                                <th style="text-align:left">Name on Document</th>
                                                                <th style="text-align:left">Expiry Date</th>
                                                                <th style="text-align:left">Upload File</th>
                                                                <th class="text-center" style="width:8%">Actions</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <small style="float:right"><span class="text-danger">* </span>indicates compulsary fields</small>
            </div>
        </div>
    </section>
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@section javascriptsection{
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script type="text/javascript">
        var imageExist = false;
        window.addEventListener("submit", function (e) {
            var isMobileVerified = $("#isMobileVerified").val();
            if (isMobileVerified == "0") {
                alert("Please Verify Your Mobile Number!");
                return false;
            }
            var inp = document.getElementById('uploadFile');
            if (inp.files.length === 0 && imageExist == false) {
                alert("Upload Photo!");
                inp.focus();
                return false;
            }
            var length=$('#tblDocumentDetails tbody tr').length;
            if(length==0)
            {
                $("#CustomErr").text("Please Click Add Document Details");
                $("#tblDocumentDetails").focus();
                return true;
            }
            var form = e.target;
            if (form.getAttribute("enctype") === "multipart/form-data") {

                if (form.dataset.ajax) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    var xhr = new XMLHttpRequest();
                    xhr.open(form.method, form.action);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 4 && xhr.status == 200) {
                            SaveDocument();
                            $("#saveModal").modal('show');
                            $(document).click(function () {
                                window.location.href = urlRedirect;
                            });
                            if (form.dataset.ajaxUpdate) {
                                var updateTarget = document.querySelector(form.dataset.ajaxUpdate);
                                if (updateTarget) {
                                    updateTarget.innerHTML = xhr.responseText;
                                }
                            }
                        }
                    };
                    xhr.send(new FormData(form));
                }
            }
        }, true);

        var urlRedirect = '@Html.Raw(@Url.Action("Index", "KYC"))';

        function OnSuccess(response) {

            $("#saveModal").modal('show');
            $(document).click(function () {
                window.location.href = urlRedirect;
            });
        }

        function OnFailure(response) {
            alert("Error occured.");
        }

        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",
                onClose: function (date) {
                    var dob = new Date($("#BirthDate").val());
                    var today = new Date();
                    var age = Math.floor((today - dob) / (365.25 * 24 * 60 * 60 * 1000));
                    $("#Age").val(age);
                }
            });

            $("#DocDate").datepicker({ dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true });
            $("#DocumentUploadVM_ExpiryDate").datepicker({ dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true });
            $("#divDocumentDetails").hide();
            if (@Model.DocumentUploadList.Count() > 0) {
                $("#divDocumentDetails").show();
            }
            var sr_no = 0;
            var trid = 0;
            currentRow = null;
            $("#tblDocumentDetails TBODY TR").on("click", ".delete", function () {
                if (confirm('Are you sure to remove?')) {
                    var tr = $(this).closest('tr');
                    trid = tr.attr('id'); // table row ID
                    var tr = $(this).closest('tr');
                    tr.remove();
                    $.ajax({
                        url: '/DocumentUpload/Remove?id=' + trid,
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            //$(this).parents('tr').remove();
                        },
                        error: function (err) {
                            alert(err.statusText);
                        }
                    });
                }
            })

            $("#btnAddDocumentDetails").click(function () {
                $("#CustomErrr").text("");
                $('[data-toggle="tooltip"]').tooltip();
                var actions = "<a class=\"delete\"><i class=\"fa fa-trash\" title='Delete'></i></a>"
                var index = $("#tblDocumentDetails tbody tr:last").index();
                var srno = 0;
                var newtrno = trid;
                if (sr_no == 0) {
                    srno = index + 2;
                    newtrno = 0;
                }
                else {
                    srno = sr_no;
                }
                sr_no = 0;
                trid = 0;

                var DocumentTypeId = $("#DocumentUploadVM_DocumentTypeId").val();
                var DocumentTypeName = $("#DocumentUploadVM_DocumentTypeId option:selected").text();
                var DocumentId = $("#DocumentUploadVM_DocumentId").val();
                var DocumentName = $("#DocumentUploadVM_DocumentId option:selected").text();
                var ExpiryDate = $("#DocumentUploadVM_ExpiryDate").val();
                var SpecifyOther = $("#DocumentUploadVM_SpecifyOther").val();
                var NameonDocument = $("#DocumentUploadVM_NameonDocument").val();
                //var filename=$("#UploadedFile").val();
                var filename = $("#targetImg").val();

                if (currentRow) {
                    $("#tblDocumentDetails tbody").find($(currentRow)).replaceWith(row);
                    $("#DocumentUploadVM_DocumentTypeId").val("");
                    $("#DocumentUploadVM_DocumentId").val("");
                    $("#DocumentUploadVM_ExpiryDate").val("");
                    $("#UploadedFile").val("");
                    currentRow = null;
                }
                else {
                    if (DocumentTypeId != "" && DocumentId != "") {

                        var fileUpload = $("#UploadedFile").get(0);
                        var files = fileUpload.files;
                        // Create FormData object
                        fileData = new FormData();
                        // Looping over all files and add it to FormData object
                        for (var i = 0; i < files.length; i++) {
                            fileData.append("UploadedFile", files[i]);
                        }
                        var row = '<tr id=' + newtrno + '>' +
                            '<td width="10%">' + srno + '</td>' +
                            '<td width="20%" id="' + DocumentTypeId + '">' + DocumentTypeName + '</td>' +
                            '<td width="20%" id="' + DocumentId + '">' + DocumentName + '</td>' +
                            '<td width="20%">' + SpecifyOther + '</td>' +
                            '<td width="20%">' + NameonDocument + '</td>' +
                            '<td width="20%">' + ExpiryDate + '</td>' +
                            '<td width="20%"><a href="#">' + files[0].name + '</a></td>"' +
                            '<td id=' + srno + '' + actions + '</td>' +
                            '</tr>';
                        $("#tblDocumentDetails tbody").append(row);

                        // Adding one more key to FormData object
                        fileData.append('Id', srno);
                        fileData.append('DocumentTypeId', DocumentTypeId);
                        fileData.append('DocumentId', DocumentId);
                        fileData.append('ExpiryDate', ExpiryDate);
                        $.ajax({
                            url: '/DocumentUpload/AddDocument',
                            type: "POST",
                            contentType: false, // Not to set any content header
                            processData: false, // Not to process data
                            data: fileData,
                            success: function (result) {
                            },
                            error: function (err) {
                                //alert(err.statusText);
                            }
                        });

                        $("#DocumentUploadVM_DocumentTypeId").val("");
                        $("#DocumentUploadVM_DocumentId").val("");
                        $("#DocumentUploadVM_ExpiryDate").val("");
                        $("#DocumentUploadVM_SpecifyOther").val("");
                        $("#DocumentUploadVM_NameonDocument").val("");
                        $("#UploadedFile").val("");
                        $("#divDocumentDetails").show();
                    }
                }

                $("#tblDocumentDetails TBODY TR").on("click", ".delete", function () {
                    if (confirm('Are you sure to remove?')) {
                        var tr = $(this).closest('tr');
                        trid = tr.find('td:eq(0)').html();
                        tr.remove();
                        $.ajax({
                            url: '/DocumentUpload/Remove?id=' + trid,
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (result) {
                                //$(this).parents('tr').remove();
                            },
                            error: function (err) {
                                alert(err.statusText);
                            }
                        });
                    }
                })
            })
        });

        var pan = $("#PANNo").val();
        var adhar = $("#AdhaarNo").val();
        $('#disabledFields').find(':input').prop('disabled', true);
        $("#btnUpdate").prop('disabled', false);
        $("#btnUpdate").hide();

        $("#CustomerID").attr('readOnly', true);
        $("#ApplicationNo").attr('readOnly', true);
        $("#ApplicationDate").attr('readOnly', true);
        $("#AppliedDate").attr('readOnly', true);

        $("#btnUpdate").click(function () {
            $('#disabledFields').find(':input').prop('disabled', false);
            $('#btn_save').prop('disabled', false);
            $("#CustomerID").attr('readOnly', true);
            $("#ApplicationNo").attr('readOnly', true);
            $("#ApplicationDate").attr('readOnly', true);
            $("#AppliedDate").attr('readOnly', true);
        });

        $("#PANNo").keyup(function () {
            $(this).val($(this).val().toUpperCase());
        });

        $("#AdhaarNo").change(function () {
            var adhar=$("#AdhaarNo").val();
            if(adhar.length!=12)
            {
                $("#AdhaarNo").val("");
                alert("Aadhar card not valid");
                $("#AdhaarNo").focus();
                return;
            }
        });

        $("#PANNo").on('change', function () {
            debugger;
            var pan = $("#PANNo").val();
            var regex = /[A-Z]{5}[0-9]{4}[A-Z]{1}$/;
            if(!regex.test(pan)){
                $("#PANNo").val("");
                alert("Invalid PAN no");
                $("#PANNo").focus();
                return regex.test(pan);
            }
            CheckPanAvailable(pan);
            $("#CustomerID").attr('readOnly', true);
            $("#ApplicationNo").attr('readOnly', true);
            $("#ApplicationDate").attr('readOnly', true);
            $("#AppliedDate").attr('readOnly', true);
        });

        $("#AdhaarNo").on('input', function () {
            var adhar = $("#AdhaarNo").val();
            CheckAdharAvailable(adhar);
            $("#CustomerID").attr('readOnly', true);
            $("#ApplicationNo").attr('readOnly', true);
            $("#ApplicationDate").attr('readOnly', true);
            $("#AppliedDate").attr('readOnly', true);
        });

        $("#sendVerificationCode").click(function () {
            var mobile = $("#MobileNo").val();
            var customerId = $("#CustomerID").val();
            SendOtp(mobile, customerId);
        });

        $("#btnVerifyMobile").click(function () {
            var mobile = $("#MobileNo").val();
            var otp = $("#verifyText").val();
            var customerId = $("#CustomerID").val();
            VerifyOtp(mobile, customerId,otp);
        });

        $("#PinCode").on('change', function () {
            var pin = $(this).val();
            FillAddressByPinCode(pin);
        });

        $("#Trans_KYCAddresses_0__PinCode").on('change', function () {
            var pin = $(this).val();
            FillAddressByPinCodePermanentAdd(pin);
        });

        $("#Trans_KYCAddresses_1__PinCode").on('change', function () {
            var pin = $(this).val();
            FillAddressByPinCodeOfficeAdd(pin);
        });

        function IsImageExist(boolVal) {
            imageExist = boolVal;
        }

        function FillAddressByPinCodePermanentAdd(pin) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("FillAddressByPinCode", "KYC")',
                data: '{id: "' + pin + '"}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#cityPermanentAdd").val(result.CityName);
                    $("#statePermanentAdd").val(result.StateName);
                    $("#areaPermanentAdd").val(result.AreaName);
                    $("#zonePermanentAdd").val(result.ZoneName);
                    $("#Trans_KYCAddresses_0__StateID").val(result.StateID);
                    $("#Trans_KYCAddresses_0__CityID").val(result.CityId);
                    $("#Trans_KYCAddresses_0__Area").val(result.AreaName);
                    $("#Trans_KYCAddresses_0__ZoneId").val(result.ZoneID);

                },
                error: function (xhr, status, error) {
                    alert("something went wrong!");
                }
            });
        }

        function FillAddressByPinCodeOfficeAdd(pin) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("FillAddressByPinCode", "KYC")',
                data: '{id: "' + pin + '"}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#cityOfficeAdd").val(result.CityName);
                    $("#stateOfficeAdd").val(result.StateName);
                    $("#areaOfficeAdd").val(result.AreaName);
                    $("#zoneOfficeAdd").val(result.ZoneName);
                    $("#Trans_KYCAddresses_1__StateID").val(result.StateID);
                    $("#Trans_KYCAddresses_1__CityID").val(result.CityId);
                    $("#Trans_KYCAddresses_1__Area").val(result.AreaName);
                    $("#Trans_KYCAddresses_1__ZoneId").val(result.ZoneID);

                },
                error: function (xhr, status, error) {
                    alert("something went wrong!");
                }
            });
        }

        $("#DocumentUploadVM_DocumentTypeId").change(function () {
            $("#DocumentUploadVM_DocumentId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDcoument","DocumentUpload")', // we are calling json method
                dataType: 'json',
                data: { id: $("#DocumentUploadVM_DocumentTypeId").val() },
                // here we are get value of selected country and passing same value
                //as inputto json method GetStates.
                success: function (data) {
                    var doc = "<select id='DocumentUploadVM_DocumentId'>";
                    doc = doc + '<option value="">--Select Document--</option>';
                    for (var i = 0; i < data.length; i++) {
                        doc = doc + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    doc = doc + '</select>';
                    $('#DocumentUploadVM_DocumentId').html(doc);
                    $("#DocumentUploadVM_DocumentId").removeAttr('disabled')
                },
                error: function (ex) {
                    //alert('Failed to retrieve data.' + ex);
                }
            });
            return false;
        })

        $("#SourceofApplicationID").change(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSourceType","KYC")', // we are calling json method
                dataType: 'json',
                data: { id: $("#SourceofApplicationID").val() },
                success: function (data) {
                    $('#SourceType').val(data);
                },
                error: function (ex) {
                    alert('Failed to retrieve data.' + ex);
                }
            });
            return false;
        })

        $("#DocumentUploadVM_DocumentId").change(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetExpiryDate")', // we are calling json method
                dataType: 'json',
                data: { id: $("#DocumentUploadVM_DocumentId").val() },
                // here we are get value of selected country and passing same value
                //as inputto json method GetStates.
                success: function (data) {
                    $("#DocumentUploadVM_ExpiryDate").attr('disabled','disabled')
                    if(data==true)
                    {
                        $("#DocumentUploadVM_ExpiryDate").removeAttr('disabled')
                    }
                },
                error: function (ex) {
                    //alert('Failed to retrieve data.' + ex);
                }
            });
            return false;
        })

        function FillAddressByPinCode(pin) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("FillAddressByPinCode", "KYC")',
                data: '{id: "' + pin + '"}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#city").val(result.CityName);
                    $("#state").val(result.StateName);
                    $("#area").val(result.AreaName);
                    $("#zone").val(result.ZoneName);
                    $("#StateID").val(result.StateID);
                    $("#CityID").val(result.CityId);
                    $("#Area").val(result.AreaName);
                    $("#ZoneID").val(result.ZoneID);

                },
                error: function (xhr, status, error) {
                    alert("something went wrong!");
                }
            });
        }

        function SaveDocument() {
            var DocDate = $("#DocDate").val();
            if (DocDate == "") {
                $("#CustomErr").text("Please Enter Date");
                $("#DocDate").focus();
                return;
            }

            var CustomerId = $("#CustomerId").val();
            if (CustomerId == "") {
                $("#CustomErr").text("Please Select Customer Id");
                $("#CustomerId").focus();
                return;
            }

            if ($('#tblDocumentDetails tbody tr').length == 0) {
                var DocumentTypeId = $("#DocumentTypeId").val();
                if (DocumentTypeId == "") {
                    $("#CustomErr").text("Please Select Document Type");
                    $("#DocumentUploadVM_DocumentTypeId").focus();
                    return;
                }

                var DocumentId = $("#DocumentId").val();
                if (DocumentId == "") {
                    $("#CustomErr").text("Please Select Document");
                    $("#DocumentUploadVM_DocumentId").focus();
                    return;
                }

                var ExpiryDate = $("#ExpiryDate").val();
                if (ExpiryDate == "") {
                    $("#CustomErr").text("Please Enter Expiry Date");
                    $("#DocumentUploadVM_ExpiryDate").focus();
                    return;
                }

                var UploadedFile = $("#UploadedFile").val();
                if (UploadedFile == "") {
                    $("#CustomErr").text("Please Select Upload File");
                    $("#UploadedFile").focus();
                    return;
                }
            }

            var length = $('#tblDocumentDetails tbody tr').length;
            if (length == 0) {
                $("#CustomErr").text("Please Click Add button then save record");
                $("#tblDocumentDetails").focus();
                return true;
            }

            $("#btn_save").prop("disabled", true);
            var DocUploadViewModel = {};
            var lstDocUploadTrn = [];

            var fileData = new FormData();
            $("#tblDocumentDetails TBODY TR").each(function () {
                var row = $(this);
                var rowDocUploadTrn = {};
                rowDocUploadTrn.DocumentTypeId = row.find("td").eq(1).attr('id');
                rowDocUploadTrn.DocumentId = row.find("td").eq(2).attr('id');
                rowDocUploadTrn.ExpiryDate = row.find("TD").eq(3).html();
                rowDocUploadTrn.UploadDocName = row.find("TD").eq(4).val();
                rowDocUploadTrn.SpecifyOther = row.find("TD").eq(5).html();
                rowDocUploadTrn.NameonDocument = row.find("TD").eq(6).val();
                lstDocUploadTrn.push(rowDocUploadTrn);
            });
            DocUploadViewModel.DocumentUploadList = lstDocUploadTrn;
            $.ajax({
                type: "POST",
                url: "/KYC/InsertDocumentData",
                data: JSON.stringify(lstDocUploadTrn),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                }
            });
        }

        function SendOtp(mobile, customerId) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SendOtp", "KYC")',
                data: '{mobile: "' + mobile + '" , customerId: "' + customerId+'"}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#otpError").text(result).fadeOut(10000);
                },
                error: function (xhr, status, error) {
                    alert("something went wrong!");
                }
            });
        }

        function VerifyOtp(mobile, customerId,otp) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("VerifyOtp", "KYC")',
                data: '{mobile: "' + mobile + '" , customerId: "' + customerId + '", otp:"'+ otp +'"}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#verifyError").text(result);
                    if (result != "Invalid OTP!") {
                        $("#isMobileVerified").val("1");
                    }
                    else {
                        $("#isMobileVerified").val("0");
                    }
                },
                error: function (xhr, status, error) {
                    alert("something went wrong!");
                }
            });
        }

        function CheckPanAvailable(pan) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("doesPanExist", "KYC")',
                data: '{PanNo: "' + pan + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.isPanAdharExist == true) {
                        if (result.isNegativeCustomer) {
                            $("#negativeCustomerErr").text("Your account has been blocked ! Please contact customer care for further details");
                            $("#disabledFields").hide();
                        }
                        else {
                            $("#negativeCustomerErr").text("");
                            var adhar = $("#AdhaarNo").val();
                            if (adhar.length == 0) {
                                $.each(result, function (key, value) {
                                    if (key == "AppliedDate" || key == "BirthDate" || key == "Expirydate") {
                                        value = new Date(parseInt(value.replace('/Date(', '')));
                                        var day = value.getDate();
                                        var month = value.getMonth() + 1;
                                        var year = value.getFullYear();
                                        value = day + "/" + month + "/" + year;
                                    }

                                    $("#" + key + "").val(value);
                                });
                                $.each(result.Trans_KYCAddresses, function (i) {
                                    $.each(result.Trans_KYCAddresses[i], function (key, val) {
                                        $("#Trans_KYCAddresses_" + i + "__" + key + "").val(val);
                                    });
                                });
                                if (result.ImageName != null) {
                                    $("#kycPhoto").append('<td><a href="/KYC/Download/' + result.KYCID + '" target=_blank>' + result.ImageName + '</a></td>');
                                    IsImageExist(true);
                                }
                            }
                            FillAddressByPinCode(result.PinCode);
                            FillAddressByPinCodePermanentAdd(result.Trans_KYCAddresses[0].PinCode);
                            FillAddressByPinCodeOfficeAdd(result.Trans_KYCAddresses[1].PinCode);
                            $("#KycType").val("Existing");
                            $('#disabledFields').find(':input').prop('disabled', true);
                            $('#btn_save').prop('disabled', true);
                            $("#disabledFields").show();
                            $("#btnUpdate").show();
                            $("#btnUpdate").attr('disabled', false);
                            var actions = "<a class=\"delete\"><i class=\"fa fa-trash\" title='Delete'></i></a>";
                            $("#divDocumentDetails").show();
                            debugger;
                            $.each(result.DocumentUploadList, function (key, val) {
                                debugger;
                                var rowCount = $('#tblDocumentDetails >tbody >tr').length + 1;
                                var value = "";
                                if (val.ExpiryDate != null) {
                                    value = new Date(parseInt(val.ExpiryDate.replace('/Date(', '')));
                                    var day = value.getDate();
                                    var month = value.getMonth() + 1;
                                    var year = value.getFullYear();
                                    value = day + "/" + month + "/" + year;
                                }
                                $('#tblDocumentDetails tbody').append('<tr id=' + val.ID + '><td>' + rowCount +
                                  '<td width="20%" id="' + val.DocumentTypeId + '">' + val.DocumentTypeName + '</td>' +
                                    '<td width="20%" id="' + val.DocumentId + '">' + val.DocumentName + '</td>' +
                                    '<td width="20%">' + val.SpecifyOther + '</td>' +
                                    '<td width="20%">' + val.NameonDocument + '</td>' +
                                    '<td width="20%">' + value + '</td>' +
                                    '<td width="20%"><a href="/KYC/Download/' + val.ID + '" target=_blank>' + val.FileName + '</a></td>' +
                                    '<td id=' + val.ID + '' + actions + '</td>' +
                                    '</tr>');
                            });
                        }

                    }
                    else {
                        var adhar = $("#AdhaarNo").val();
                        if (pan.length > 0 || adhar.length > 0) {
                            $('#disabledFields').find(':input').prop('disabled', false);
                            $('#btn_save').prop('disabled', false);
                            $("#KycType").val("New");
                        }
                        else {
                            $('#disabledFields').find(':input').prop('disabled', true);
                            $('#btn_save').prop('disabled', true);
                        }

                    }
                },
                error: function (xhr, status, error) {
                }
            });
        }

        function CheckAdharAvailable(adhar) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("doesAdharExist", "KYC")',
                data: '{AdharNo: "' + adhar + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    debugger;
                    if (result.isPanAdharExist == true) {
                        if (result.isNegativeCustomer) {
                            $("#negativeCustomerErr").text("Your account has been blocked ! Please contact customer care for further details");
                            $("#disabledFields").hide();
                        }
                        else {
                            var pan = $("#PANNo").val();
                            if (pan.length == 0) {
                                $.each(result, function (key, value) {
                                    if (key == "AppliedDate" || key == "BirthDate" || key == "Expirydate") {
                                        value = new Date(parseInt(value.replace('/Date(', '')));
                                        var day = value.getDate();
                                        var month = value.getMonth() + 1;
                                        var year = value.getFullYear();
                                        value = day + "/" + month + "/" + year;
                                    }
                                    $("#" + key + "").val(value);
                                });
                                $.each(result.Trans_KYCAddresses, function (i) {
                                    $.each(result.Trans_KYCAddresses[i], function (key, val) {
                                        $("#Trans_KYCAddresses_" + i + "__" + key + "").val(val);
                                    });
                                });
                                if (result.ImageName != null) {
                                    $("#kycPhoto").append('<td><a href="/KYC/Download/' + result.KYCID + '" target=_blank>' + result.ImageName + '</a></td>');
                                }
                            }
                            $("#KycType").val("Existing");
                            $("#area").val(result.Area);
                            $('#disabledFields').find(':input').prop('disabled', true);
                            $('#btn_save').prop('disabled', true);
                            $("#btnUpdate").show();
                            $("#btnUpdate").attr('disabled', false);

                            var actions = "<a class=\"delete\"><i class=\"fa fa-trash\" title='Delete'></i></a>";
                            $("#divDocumentDetails").show();
                            debugger;
                            $.each(result.DocumentUploadList, function (key, val) {
                                debugger;
                                var rowCount = $('#tblDocumentDetails >tbody >tr').length + 1;
                                var value = "";
                                if (val.ExpiryDate != null) {
                                    value = new Date(parseInt(val.ExpiryDate.replace('/Date(', '')));
                                    var day = value.getDate();
                                    var month = value.getMonth() + 1;
                                    var year = value.getFullYear();
                                    value = day + "/" + month + "/" + year;
                                }
                                $('#tblDocumentDetails tbody').append('<tr id=' + val.ID + '><td>' + rowCount +
                                  '<td width="20%" id="' + val.DocumentTypeId + '">' + val.DocumentTypeName + '</td>' +
                                    '<td width="20%" id="' + val.DocumentId + '">' + val.DocumentName + '</td>' +
                                    '<td width="20%">' + val.SpecifyOther + '</td>' +
                                    '<td width="20%">' + val.NameonDocument + '</td>' +
                                    '<td width="20%">' + value + '</td>' +
                                    '<td width="20%"><a href="/KYC/Download/' + val.ID + '" target=_blank>' + val.FileName + '</a></td>' +
                                    '<td id=' + val.ID + '' + actions + '</td>' +
                                    '</tr>');
                            });
                        }
                    }
                    else {
                        var pan = $("#PANNo").val();
                        if (adhar.length > 0 || pan.length > 0) {
                            $('#disabledFields').find(':input').prop('disabled', false);
                            $('#btn_save').prop('disabled', false);
                            $("#KycType").val("New");
                        }
                        else {
                            $('#disabledFields').find(':input').prop('disabled', true);
                            $('#btn_save').prop('disabled', true);
                        }
                        // CheckPanAvailable(pan);
                    }
                },
                error: function (xhr, status, error) {
                    //alert(error);
                }
            });
        }
    </script>
}



